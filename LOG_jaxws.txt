/ see WSDL RPC DOCUMENT 
/ see SAMENVATTING WS IN WILDFLY
/ see EJB ANNOTATIES

/ 7. 

/ we maken nieuwe workspace,
C:\Users\ervelden\eclipse\workspace-jbosstools-jee-oxygen-metro-jaxws

/ lees,
http://javainsimpleway.com/jax-ws-basic-example-rpc-style/

/ 13	. 

/ we maken een mvn project
my.own
rpcjaxwsprimenumber

/ right click project, build path, libraries, select JRE system library [Java-SE 1.5], kies edit, in nieuw window, kies in drop-down list Java-SE 1.8

/ 13	. 

/ Create a service endpoint interface,



/ alle annotaties, met TAB zijn bekend in de jdk1.8.0_144	,

/ Dit is een SEI, een service endpoint interface,

$ vi PrimeNumberService.java

package my.own.ws;

import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.jws.soap.SOAPBinding.Style;

@WebService
@SOAPBinding(style=Style.RPC)
public interface PrimeNumberService {
	
	@WebMethod
	public boolean isPrimeNumber(int number);

}

/ 13	. 

/ we maken met New, Class	, en typ de naam in: PrimeNumberServiceImpl, en geef het interface op, 
/ dan gen eclipse de method er in, we hoeven geen ctrl+1	,

$ vi PrimeNumberServiceImpl.java

package my.own.ws;

public class PrimeNumberServiceImpl implements PrimeNumberService {

	@Override
	public boolean isPrimeNumber(int number) {
		// TODO Auto-generated method stub
		return false;
	}

}

/ we moeten de @WebService nog plaatsen	,

$ vi PrimeNumberServiceImpl.java

package my.own.ws;

import javax.jws.WebService;

@WebService(endpointInterface="my.own.ws.PrimeNumberService")
public class PrimeNumberServiceImpl implements PrimeNumberService {

	@Override
	public boolean isPrimeNumber(int number) {
		for(int i=2;i<Math.sqrt(number);i++) {
			if(number%i==0) {
				return false;
			}
		}
		return true;
	}

}

/ de SEI en de Impl zijn in 1 package, my.own.ws,

/ 13	 .

/ de endpoint maken we in package my.own.ws.srv,

$ vi PrimeNumberPublisher.java

package my.own.ws.srv;

import javax.xml.ws.Endpoint;

public class PrimeNumberPublisher {
	public static void main(String[] args) {
		Endpoint endpoint=Endpoint.create(new PrimeNumberServiceImpl());
		endpoint.publish("http://localhost:8888/ws/primenumber");
	}

}

/ 13	. 

/ run	,

/ we run in eclipse, right click PrimeNumberPublisher, Execute java application	,

/ maar executable jar,
/ lees,
https://www.mkyong.com/java/how-to-make-an-executable-jar-file/
https://www.baeldung.com/executable-jar-with-maven
https://stackoverflow.com/questions/574594/how-can-i-create-an-executable-jar-with-dependencies-using-maven
/ TODO

/ we kunnen geven in browser, 
http://localhost:8888/ws/primenumber
/ maar zegt:
localhost didn’t send any data.
ERR_EMPTY_RESPONSE

/ maar wel:
http://localhost:8888/ws/primenumber?wsdl

/ dit is een andere manier om wsdl te gen, dan met wsgen	, 
/ TODO

<!--
 Published by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.2.9-b130926.1035 svn-revision#5f6196f2b90e9460065a4c2f4e30e065b245e51e. 
-->
<!--
 Generated by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.2.9-b130926.1035 svn-revision#5f6196f2b90e9460065a4c2f4e30e065b245e51e. 
-->
<definitions 
xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" 
xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" 
xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" 
xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" 
xmlns:tns="http://ws.own.my/" 
xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
xmlns="http://schemas.xmlsoap.org/wsdl/" 
targetNamespace="http://ws.own.my/" name="PrimeNumberServiceImplService">
	<types/>
	<message name="isPrimeNumber">
		<part name="arg0" type="xsd:int"/>
	</message>
	<message name="isPrimeNumberResponse">
		<part name="return" type="xsd:boolean"/>
	</message>
	<portType name="PrimeNumberService">
		<operation name="isPrimeNumber">
			<input wsam:Action="http://ws.own.my/PrimeNumberService/isPrimeNumberRequest" message="tns:isPrimeNumber"/>
			<output wsam:Action="http://ws.own.my/PrimeNumberService/isPrimeNumberResponse" message="tns:isPrimeNumberResponse"/>
		</operation>
	</portType>
	<binding name="PrimeNumberServiceImplPortBinding" type="tns:PrimeNumberService">
		<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
		<operation name="isPrimeNumber">
			<soap:operation soapAction=""/>
			<input>
				<soap:body use="literal" namespace="http://ws.own.my/"/>
			</input>
			<output>
				<soap:body use="literal" namespace="http://ws.own.my/"/>
			</output>
		</operation>
	</binding>
	<service name="PrimeNumberServiceImplService">
		<port name="PrimeNumberServiceImplPort" binding="tns:PrimeNumberServiceImplPortBinding">
			<soap:address location="http://localhost:8888/ws/primenumber"/>
		</port>
	</service>
</definitions>

/ 13	. 

/ wsimport,

/ om de client te maken,

/ we geven de URL op, we hebben niet eens een wsdl file/,

/ we veranderen class names,

$ vi IPrimeNumber.java

package my.own.ws;

import javax.jws.WebMethod;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.jws.soap.SOAPBinding.Style;

// a SEI

@WebService
@SOAPBinding(style=Style.RPC)
public interface IPrimeNumber {
	
	@WebMethod
	public boolean isPrimeNumber(int number);

}

$ vi PrimeNumber.java

package my.own.ws;

import javax.jws.WebService;

@WebService(endpointInterface="my.own.ws.IPrimeNumber")
public class PrimeNumber implements IPrimeNumber {

	@Override
	public boolean isPrimeNumber(int number) {
		for(int i=2;i<Math.sqrt(number);i++) {
			if(number%i==0) {
				return false;
			}
		}
		return true;
	}

}

$ vi PrimeNumberPublisher.java

package my.own.ws.srv;

import javax.xml.ws.Endpoint;

import my.own.ws.PrimeNumber;

public class PrimeNumberPublisher {
	public static void main(String[] args) {
		Endpoint endpoint=Endpoint.create(new PrimeNumber());
		endpoint.publish("http://localhost:8888/ws/primenumber");
	}

}

/ run in eclipse  PrimeNumberPublisher,
/ in browser,

http://localhost:8888/ws/primenumber?wsdl

This XML file does not appear to have any style information associated with it. The document tree is shown below.
<!--
 Published by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.2.9-b130926.1035 svn-revision#5f6196f2b90e9460065a4c2f4e30e065b245e51e. 
-->
<!--
 Generated by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.2.9-b130926.1035 svn-revision#5f6196f2b90e9460065a4c2f4e30e065b245e51e. 
-->
<definitions 
xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" 
xmlns:wsp="http://www.w3.org/ns/ws-policy" 
xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" 
xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" 
xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" 
xmlns:tns="http://ws.own.my/" 
xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
xmlns="http://schemas.xmlsoap.org/wsdl/" 
targetNamespace="http://ws.own.my/" name="PrimeNumberService">
	<types/>
	<message name="isPrimeNumber">
		<part name="arg0" type="xsd:int"/>
	</message>
	<message name="isPrimeNumberResponse">
		<part name="return" type="xsd:boolean"/>
	</message>
	<portType name="IPrimeNumber">
		<operation name="isPrimeNumber">
			<input wsam:Action="http://ws.own.my/IPrimeNumber/isPrimeNumberRequest" message="tns:isPrimeNumber"/>
			<output wsam:Action="http://ws.own.my/IPrimeNumber/isPrimeNumberResponse" message="tns:isPrimeNumberResponse"/>
		</operation>
	</portType>
	<binding name="PrimeNumberPortBinding" type="tns:IPrimeNumber">
		<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
		<operation name="isPrimeNumber">
			<soap:operation soapAction=""/>
			<input>
				<soap:body use="literal" namespace="http://ws.own.my/"/>
			</input>
			<output>
				<soap:body use="literal" namespace="http://ws.own.my/"/>
			</output>
		</operation>
	</binding>
	<service name="PrimeNumberService">
		<port name="PrimeNumberPort" binding="tns:PrimeNumberPortBinding">
			<soap:address location="http://localhost:8888/ws/primenumber"/>
		</port>
	</service>
</definitions>

/ 13	. 

$ vi PrimeNumberManualClient.java

package my.own.ws.cli;

import java.net.MalformedURLException;
import java.net.URL;
import java.nio.charset.MalformedInputException;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;

import my.own.ws.IPrimeNumber;

public class PrimeNumberManualClient {
	public static void main(String[] args)throws MalformedURLException {
		URL url=new URL("http://localhost:8888/ws/primenumber?wsdl");
		QName qName=new QName("http://ws.own.my/","PrimeNumberService");
		Service service=Service.create(url, qName);
		IPrimeNumber iPrimeNumber=service.getPort(IPrimeNumber.class);
		boolean b=iPrimeNumber.isPrimeNumber(13);
		System.out.println("13: "+b);
		b=iPrimeNumber.isPrimeNumber(14);
		System.out.println("14: "+b);
	}

}

/ run in eclipse, 
13: true
14: false

/ 13	. 

/ we hebben project jaxwsprimenumberrpc cp naar jaxwsprimenumberrpc2	, 
/ we gaan verder met jaxwsprimenumberrpc2

/ lees,
https://javaee.github.io/metro/doc/user-guide/user-guide.html

/ 13	. 

/ we nemen op in pom.xml:

  <dependencies>
	  <dependency>
		  <groupId>org.glassfish.metro</groupId>
		  <artifactId>webservices-rt</artifactId>
		  <version>2.4.3</version>
	</dependency>
  </dependencies>

/ of,

  <dependencies>  
	<dependency>
	  <groupId>com.sun.xml.ws</groupId>
	  <artifactId>jaxws-rt</artifactId>
	  <version>2.3.2</version>
	  <type>pom</type>
	</dependency>
  </dependencies>
/ WH niets	,

/ of,
  <dependencies>  
	<dependency>
	  <groupId>com.sun.xml.ws</groupId>
	  <artifactId>jaxws-rt</artifactId>
	  <version>2.2.10</version>
	  <type>pom</type>
	</dependency>
  </dependencies>
/ OK	,
/ geef in eclipse EndpointAddress geeft F3	, we zien de src code	, 
package com.sun.xml.ws.api;
 *
 * @author Kohsuke Kawaguchi
 */
public final class EndpointAddress {
/ deze zit ook in rt.jar, maar eclipse kent hem dan niet als we F3 geven, 
/ TODO
/ dus WH is jaxws-rt onderdeel van rt.jar,

/ 7. 

/ lees,
http://www.mkyong.com/webservices/jax-ws/jax-ws-wsgen-tool-example/

/ workspace-jbosstools-jee-oxygen-wildfly-quickstart
/ proj abc-wsgen-wsimport

/ we maken my.own.ws:abs-wsgen-wsimport:0.0.1-SNAPSHOT in pom.xml,
/ we moeten in buildpath meteen Java-SE 1.8	, anders kent hij @WebService niet,

/ in project explorer is een V	, klik en kies 'Filters and customization'	, uncheck 'Java output folders'	, 
/ nu zien we onder target/ alles wat eclipse gen,

/ we maken de wsgen voorbeelden in my.own.ws.gen package, en de wsimport vb in my.own.ws.import package	,

/ we maken een class !, 
/ een sei is niet nodig?
/ TODO

$ vi ServerInfo.java

package my.own.ws.gen;

import javax.jws.WebMethod;
import javax.jws.WebService;

@WebService
public class  ServerInfo {
	@WebMethod 
	public String getIpAddress(){
		return "10.10.10.10";
	}
}


ERVELDEN@LBNL031514 MINGW64 ~/java/quickstart (10.x)
/ maak in eclipse proj abc-wsgen-wsimport
$ git add . 
$ git commit -m "new abc-wsgen-wsimport http://www.mkyong.com/webservices/jax-ws/jax-ws-wsgen-tool-example/"
[10.x d76eb7a7] new abc-wsgen-wsimport http://www.mkyong.com/webservices/jax-ws/jax-ws-wsgen-tool-example/
 7 files changed, 39 insertions(+), 9 deletions(-)
 create mode 100644 abc-wsgen-wsimport/pom.xml
 create mode 100644 abc-wsgen-wsimport/src/main/java/my/own/ws/ServerInfo.java

/ 13	. 

/ als we mvn clean , dan is target/ rm	,
/ als we vervolgens in eclipse F5, dan staat er in target/:

./target
./target/classes
./target/classes/META-INF
./target/classes/META-INF/MANIFEST.MF
./target/classes/META-INF/maven
./target/classes/META-INF/maven/my.own.ws
./target/classes/META-INF/maven/my.own.ws/abc-wsgen-wsimport
./target/classes/META-INF/maven/my.own.ws/abc-wsgen-wsimport/pom.properties
./target/classes/META-INF/maven/my.own.ws/abc-wsgen-wsimport/pom.xml
./target/test-classes
/ TODO

/ als we mvn compile	, dan wordt ServerInfo compile in target/ 	,
/ of als we in eclipse clean project abc-wsgen-wsimport,

./target
./target/classes
./target/classes/my
./target/classes/my/own
./target/classes/my/own/ws
./target/classes/my/own/ws/ServerInfo.class
./target/maven-status
./target/maven-status/maven-compiler-plugin
./target/maven-status/maven-compiler-plugin/compile
./target/maven-status/maven-compiler-plugin/compile/default-compile
./target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
./target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst

/ 13	.

ERVELDEN@LBNL031514 MINGW64 ~/java/quickstart/abc-wsgen-wsimport (10.x)
$ wsgen -cp target/classes -keep -wsdl my.own.ws.ServerInfo -d gen

ERVELDEN@LBNL031514 MINGW64 ~/java/quickstart/abc-wsgen-wsimport (10.x)
$ find gen
gen
gen/my
gen/my/own
gen/my/own/ws
gen/my/own/ws/jaxws
gen/my/own/ws/jaxws/GetIpAddress.class
gen/my/own/ws/jaxws/GetIpAddress.java
gen/my/own/ws/jaxws/GetIpAddressResponse.class
gen/my/own/ws/jaxws/GetIpAddressResponse.java
gen/ServerInfoService.wsdl
gen/ServerInfoService_schema1.xsd

/ 13	. 

/ we hebben de opl van mkyong extr in mykong/	, 
/ we zien,	

$ vi web.xml

<web-app>
    <listener>
        <listener-class>
        	com.sun.xml.ws.transport.http.servlet.WSServletContextListener
        </listener-class>
    </listener>
    <servlet>
        <servlet-name>user</servlet-name>
        <servlet-class>
        	com.sun.xml.ws.transport.http.servlet.WSServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
	...
/ TODO

$ vi sun-jaxws.xml
...

/ doe de ant builds,
-> war, deploy in wildfly,

ERVELDEN@LBNL031514 MINGW64 ~/java/quickstart/abc-wsgen-wsimport/mkyong/WebServices (10.x)
$ pwd
/c/Users/ervelden/java/quickstart/abc-wsgen-wsimport/mkyong/WebServices
$ ant war
...
  [copydir] Copying 4 files to C:\Users\ervelden\java\quickstart\abc-wsgen-wsimport\mkyong\WebServices\dist\war\build\WEB-INF\classes
      [jar] Building jar: C:\Users\ervelden\java\quickstart\abc-wsgen-wsimport\mkyong\WebServices\dist\war\WebServiceExample-20190204.war

/ deployment in wildfly gaat niet: ClassNotFoundException WSServlet,

/ in mkyong's src staan ook de 2 gen files GetIpAddress.java, GetIpAddressResponse.java, 
/ moet dat?

/ 13	 

$ vi  WsPublisher.java

public class WsPublisher {

	public static void main(String[] args) {
		Endpoint.publish("http://localhost:8888/ws/server", new ServerInfo());
		System.out.println("Service is published");

	}

}
/ Dit programma blijft draaien!
/ WH start Endpoint.publish een thread	,
/ TODO

/ 13	. 

/ Als we geen targetNamespace arg geven aan @WebService, dan verschijnt de package name van de @WebService impl omgekeerd in de wsdl,

<definitions ... targetNamespace="http://gen.ws.own.my/">


/ 7	. 

/ wsimport, 

/ lees,
http://www.mkyong.com/webservices/jax-ws/jax-ws-hello-world-example/

/ ws workspace-jbosstools-jee-oxygen-wildfly-quickstart
/ proj abc-wsgen-wsimp	,

/ we maken een package my.own.ws.imp voor deze mkyong page	,

/ 13	. 

/ we hebben de client, 
/ hier zien we ook dat we de package name moeten omdraaien, net als het in de wsdl staat,

$ vi HelloWorldClient.java

public class HelloWorldClient {

	public static void main(String[] args)throws MalformedURLException {
		URL url=new URL("http://localhost:8888/ws/hello?wsdl");
		QName qName=new QName("http://imp.ws.own.my/","HelloWorldService");		/ !
		Service service=Service.create(url, qName);
		IHelloWorld helloWorld=service.getPort(IHelloWorld.class);		/ !
		String res=helloWorld.getHelloWorldAsString("Bar Baz");
		System.out.println(res);
		
$ vi ....wsdl				/ TODO
<portType name="IHelloWorld">
	<operation name="getHelloWorldAsString">
		<input wsam:Action="http://imp.ws.own.my/IHelloWorld/getHelloWorldAsStringRequest" message="tns:getHelloWorldAsString"/>
		<output wsam:Action="http://imp.ws.own.my/IHelloWorld/getHelloWorldAsStringResponse" message="tns:getHelloWorldAsStringResponse"/>
	</operation>
</portType>
<binding name="HelloWorldPortBinding" type="tns:IHelloWorld">

/ 13	. 

C:\Users\ervelden\java\quickstart\abc-wsgen-wsimport> wsimport -keep -d imp http://localhost:8888/ws/hello?wsdl
parsing WSDL...
Generating code...
Compiling code...

ERVELDEN@LBNL031514 MINGW64 ~/java/quickstart/abc-wsgen-wsimport (10.x)
$ cat imp/my/own/ws/imp/IHelloWorld.java

package my.own.ws.imp;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.ws.Action;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 */
@WebService(name = "IHelloWorld", targetNamespace = "http://imp.ws.own.my/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
public interface IHelloWorld {


    /**
     *
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://imp.ws.own.my/IHelloWorld/getHelloWorldAsStringRequest", output = "http://imp.ws.own.my/IHelloWorld/getHelloWorldAsStringResponse")
    public String getHelloWorldAsString(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

}

$ cat imp/my/own/ws/imp/HelloWorldService.java

package my.own.ws.imp;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "HelloWorldService", targetNamespace = "http://imp.ws.own.my/", wsdlLocation = "http://localhost:8888/ws/hello?wsdl")
public class HelloWorldService
    extends Service
{

    private final static URL HELLOWORLDSERVICE_WSDL_LOCATION;
    private final static WebServiceException HELLOWORLDSERVICE_EXCEPTION;
    private final static QName HELLOWORLDSERVICE_QNAME = new QName("http://imp.ws.own.my/", "HelloWorldService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8888/ws/hello?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        HELLOWORLDSERVICE_WSDL_LOCATION = url;
        HELLOWORLDSERVICE_EXCEPTION = e;
    }

    public HelloWorldService() {
        super(__getWsdlLocation(), HELLOWORLDSERVICE_QNAME);
    }

    public HelloWorldService(WebServiceFeature... features) {
        super(__getWsdlLocation(), HELLOWORLDSERVICE_QNAME, features);
    }

    public HelloWorldService(URL wsdlLocation) {
        super(wsdlLocation, HELLOWORLDSERVICE_QNAME);
    }

    public HelloWorldService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, HELLOWORLDSERVICE_QNAME, features);
    }

    public HelloWorldService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HelloWorldService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns IHelloWorld
     */
    @WebEndpoint(name = "HelloWorldPort")
    public IHelloWorld getHelloWorldPort() {
        return super.getPort(new QName("http://imp.ws.own.my/", "HelloWorldPort"), IHelloWorld.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IHelloWorld
     */
    @WebEndpoint(name = "HelloWorldPort")
    public IHelloWorld getHelloWorldPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://imp.ws.own.my/", "HelloWorldPort"), IHelloWorld.class, features);
    }

    private static URL __getWsdlLocation() {
        if (HELLOWORLDSERVICE_EXCEPTION!= null) {
            throw HELLOWORLDSERVICE_EXCEPTION;
        }
        return HELLOWORLDSERVICE_WSDL_LOCATION;
    }

}

/ 13	. 

/ we kunnen op IHelloWorld @SOAPBinding(style=Style.DOCUMENT) of @SOAPBinding(style=Style.RPC)

/ het maakt niet uit, maar de wsdl ziet er anders uit,

/ 1313	. 

$ vi HelloWorldClient.java

public class HelloWorldClient {

	public static void main(String[] args)throws MalformedURLException {
		URL url=new URL("http://localhost:8888/ws/hello?wsdl");
		QName qName=new QName("http://imp.ws.own.my/","HelloWorldService");
		Service service=Service.create(url, qName);
		IHelloWorld helloWorld=service.getPort(IHelloWorld.class);		/ Dit MOET een interface zijn, dus 
		
		HelloWorld helloWorld=service.getPort(HelloWorld.class);	/ is ERR,

/ 1313	. 

$ wsgen -cp target/classes -keep -wsdl my.own.ws.gen.IServerInfo -d gen	
/ is ERR,
/ want The class "my.own.ws.gen.IServerInfo" is not an endpoint implementation class.

/ 1313	. 

$ wsgen -cp target/classes -keep -wsdl my.own.ws.imp.HelloWorld -d gen_after_imp/

/ bij wsgen moeten we een sei impl class geven, maar kijkt ook naar de sei, want daar staat de binding RPC of DOCUMENT	, en 
/ en dat zien we terug in de gen wsdl,

/ Bij ServerInfo was er geen sei, en daar zien we in de wsdl DOCUMENT	,

/ 131313	. 


////////////////////////////////////////
/ sei =endpoint interface,
/ Vergeet in de sei impl class in de @WebService niet de endpointInterface="pkg.sei" mee te geven, anders wordt de sei niet gekoppeld, 
/ implements sei is NIET genoeg.
/ als we endpointInterface param aan WebService in sei impl class, dan mogen we NIET @WebMethod set op de methods, want dat is al in de sei,

@WebService
@SOAPBinding(style=Style.RPC)
public interface IHelloWorld {
	@WebMethod String getHelloWorldAsString(String name);
}

@WebService(endpointInterface="my.own.ws.imp.IHelloWorld")			/ ! endpointInterface 
public class HelloWorld implements IHelloWorld {
	@Override												/ ! geen @WebMethod
	public String getHelloWorldAsString(String name) {
		return "Hello World JAX-WS "+name;
	}
}

/ 13131313	. 

/ mkyong begon met 

@WebService
public class  ServerInfo {
	
	@Override
	@WebMethod
	public String getIpAddress(){
		return "10.10.10.10";
	}
}

/ dus geen endpointInterface op @WebService en wel een @WebMethod op de mth	, 
/ voor wsgen is dit OK, maar in een client moet je een interface geven,

		Service service=Service.create(url, qName);
		IHelloWorld helloWorld=service.getPort(IHelloWorld.class);
/ TODO




/ 131313	.

/ WSDL RPC DOCUMENT 

/ gen wsdl, rpc of document, 

@WebService
@SOAPBinding(style=Style.RPC)
public interface IServerInfo {
	String getIpAddress();
}
@WebService(endpointInterface="my.own.ws.gen.IServerInfo")
public class  ServerInfo implements IServerInfo {
	
	@Override
	public String getIpAddress(){
		return "10.10.10.10";
	}
}

$  wsgen -cp target/classes -keep -wsdl my.own.ws.gen.ServerInfo -d gen

$ find gen
gen
gen/my
gen/my/own
gen/my/own/ws
gen/my/own/ws/gen
gen/my/own/ws/gen/jaxws
gen/my/own/ws/gen/jaxws/GetIpAddress.class
gen/my/own/ws/gen/jaxws/GetIpAddress.java
gen/my/own/ws/gen/jaxws/GetIpAddressResponse.class
gen/my/own/ws/gen/jaxws/GetIpAddressResponse.java
gen/ServerInfoService.wsdl
gen/ServerInfoService_schema1.xsd

/ we zien rpc terug in de wsdl,

/ 13131313	. 

/ als we, 

@WebService
@SOAPBinding(style=Style.DOCUMENT)
public interface IServerInfo {

	String getIpAddress();

}

$  wsgen -cp target/classes -keep -wsdl my.own.ws.gen.ServerInfo -d gen

/ dan zien we document in de wsdl,

/ 131313	. 

/ wsimport after wsgen,

/ we hebben 

gen/ServerInfoService.wsdl
gen/ServerInfoService_schema1.xsd

/ we hoeven niets aan te passen , de schemaLocation van gen/ServerInfoService_schema1.xsd staat goed in gen/ServerInfoService.wsdl

ERVELDEN@LBNL031514 MINGW64 ~/java/quickstart/abc-wsgen-wsimport (10.x)
$ wsimport -keep -d imp_after_gen gen/ServerInfoService.wsdl

$ find imp_after_gen/
imp_after_gen/
imp_after_gen/my
imp_after_gen/my/own
imp_after_gen/my/own/ws
imp_after_gen/my/own/ws/gen
imp_after_gen/my/own/ws/gen/GetIpAddress.class
imp_after_gen/my/own/ws/gen/GetIpAddress.java
imp_after_gen/my/own/ws/gen/GetIpAddressResponse.class
imp_after_gen/my/own/ws/gen/GetIpAddressResponse.java
imp_after_gen/my/own/ws/gen/IServerInfo.class
imp_after_gen/my/own/ws/gen/IServerInfo.java
imp_after_gen/my/own/ws/gen/IServerInfo2.class
imp_after_gen/my/own/ws/gen/IServerInfo2.java
imp_after_gen/my/own/ws/gen/ObjectFactory.class
imp_after_gen/my/own/ws/gen/ObjectFactory.java
imp_after_gen/my/own/ws/gen/package-info.class
imp_after_gen/my/own/ws/gen/package-info.java
imp_after_gen/my/own/ws/gen/ServerInfoService.class
imp_after_gen/my/own/ws/gen/ServerInfoService.java

/ eerder,
$ wsgen -cp target/classes -keep -wsdl my.own.ws.gen.ServerInfo -d gen
$  find gen
gen
gen/my
gen/my/own
gen/my/own/ws
gen/my/own/ws/gen
gen/my/own/ws/gen/jaxws
gen/my/own/ws/gen/jaxws/GetIpAddress.class
gen/my/own/ws/gen/jaxws/GetIpAddress.java
gen/my/own/ws/gen/jaxws/GetIpAddressResponse.class
gen/my/own/ws/gen/jaxws/GetIpAddressResponse.java
gen/ServerInfoService.wsdl
gen/ServerInfoService_schema1.xsd

/ In gen/ zijn GetIpAddress @XmlRootElement	, in imp_after_gen niet, 
/ TODO

/ google,
objectfactory
/ lees,	
https://stackoverflow.com/questions/953723/whats-the-point-of-jaxb-2s-objectfactory-classes

/ google
rootelement objectfactory
/ lees,
https://dzone.com/articles/jaxb-and-root-elements	/  Blaise Doughan  

/ 131313	. 

/ we deploy abc-wsgen-wsimport/mkyong/WebServices's war:
 
:9990 /] deploy c:\Users\ervelden\java\quickstart\abc-wsgen-wsimport\mkyong\WebServices\dist\war\WebServiceExample-20190204.war
ite operation failed and was rolled back. Steps that failed:" => {"Operation step-2" => {"WFLYCTL0080: Failed services" => {"jboss.undertow.deployment.default-server.default-host./WebServiceExample-20190204.UndertowDeploymentInfoService" => "org.jboss.msc.service.StartException in service jboss.undertow.deployment.default-server.default-host./WebServiceExample-20190204.UndertowDeploymentInfoService: java.lang.ClassNotFoundException: com.sun.xml.ws.transport.http.servlet.WSServlet from [Module \"deployment.WebServiceExample-20190204.war:main\" from Service Module Loader]
ang.ClassNotFoundException: com.sun.xml.ws.transport.http.servlet.WSServlet from [Module \"deployment.WebServiceExample-20190204.war:main\" from Service Module Loader]"},"WFLYCTL0412: Required services that are not installed:" => ["jboss.undertow.deployment.default-server.default-host./WebServiceExample-20190204.UndertowDeploymentInfoService"],"WFLYCTL0180: Services with missing/unavailable dependencies" => undefined}}}
:9990 /]

/ lees,
https://www.mkyong.com/webservices/jax-ws/java-lang-classnotfoundexception-com-sun-xml-ws-transport-http-servlet-wsservletcontextlistener/

The JAX-WS dependency library “jaxws-rt.jar” is missing.

Go here http://jax-ws.java.net/.
Download JAX-WS RI distribution.
Unzip it and copy “jaxws-rt.jar” to Tomcat library folder “{$TOMCAT}/lib“.
Restart Tomcat.

/ In jdk's lib/ zit jaxws.jar, maar daar zitten WSServlet en WSServletContextListener niet in,

/ we komen op,
https://github.com/javaee/metro-jax-ws

/ we proberen via search.maven.org, 
/ hoe dep jaxws-rt.jar bij deployment war, moet in war's lib/?
/ TODO



/ 131313	. 

/ lees,
https://www.theserverside.com/video/Step-by-step-SOAP-web-services-example-in-Java-using-Eclipse

/ google,
webapp soap example WSServletContextListener
/ lees,
https://jaxenter.com/creating-soap-web-services-using-jax-ws-117689.html / ! discoverIndia-soap-web-service
https://www.mkyong.com/webservices/jax-ws/deploy-jax-ws-web-services-on-tomcat/

ERVELDEN@LBNL031514 MINGW64 ~/java/quickstart/abc-wsgen-wsimport (10.x)
$ unzip  /d/Users/ervelden/Downloads/JAX-WS-Deploy-To-Tomcat-Example.zip


ERVELDEN@LBNL031514 MINGW64 ~/java/quickstart/abc-wsgen-wsimport (10.x)
$ git clone https://github.com/eMahtab/discoverIndia-soap-web-service.git

WebContent -> /
build/classes -> WEB-INF/

/ 131313	. 

/ lees,
https://jaxenter.com/creating-soap-web-services-using-jax-ws-117689.html / ! discoverIndia-soap-web-service


$ pwd
/c/Users/ervelden/java/quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-works

$ vi build.xml

 <target name="war">
               
                <copydir dest="${dist}/war/build/WEB-INF/" src="${webcontent}/WEB-INF/" />
                <copydir dest="${dist}/war/build/WEB-INF/classes/" src="${build}/classes/" />

                <jar jarfile="${dist}/war/${projectName}-${DSTAMP}.war" basedir="${dist}/war/build/"/>
 </target>
 
ERVELDEN@LBNL031514 MINGW64 ~/java/quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my (master)
$ jar tvf dist/war/WebServiceExample-\$\{DSTAMP\}.war
     0 Thu Feb 07 17:19:08 CET 2019 META-INF/
   105 Thu Feb 07 17:19:06 CET 2019 META-INF/MANIFEST.MF
     0 Thu Feb 07 17:19:08 CET 2019 WEB-INF/
     0 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/
     0 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/net/
     0 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/net/mahtabalam/
     0 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/net/mahtabalam/ws/
     0 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/
     0 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/
   485 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/net/mahtabalam/ws/Country.class
  1483 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/net/mahtabalam/ws/CountryImpl.class
  2005 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/net/mahtabalam/ws/State.class
  5895 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/net/mahtabalam/ws/Utility.class
  1653 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/Client.class
  2605 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/CountryImpl.class
  2752 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/CountryImplService.class
   767 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/GetAirports.class
   873 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/GetAirportsResponse.class
   763 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/GetCapital.class
   869 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/GetCapitalResponse.class
   771 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/GetDistricts.class
   826 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/GetDistrictsResponse.class
   799 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/GetInterestingFacts.class
   905 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/GetInterestingFactsResponse.class
   771 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/GetLanguages.class
   877 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/GetLanguagesResponse.class
   787 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/GetPlacesToVisit.class
   893 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/GetPlacesToVisitResponse.class
  7293 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/ObjectFactory.class
   239 Thu Feb 07 17:19:08 CET 2019 WEB-INF/classes/wsclient/package-info.class
296714 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/FastInfoset.jar
 21820 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/gmbal-api-only.jar
 36383 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/ha-api.jar
 26366 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/javax.annotation-api.jar
 41135 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/javax.xml.soap-api.jar
102308 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/jaxb-api.jar
234226 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/jaxb-core.jar
1040864 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/jaxb-impl.jar
123384 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/jaxb-jxc.jar
2025279 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/jaxb-xjc.jar
 50360 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/jaxws-api.jar
2505911 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/jaxws-rt.jar
841775 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/jaxws-tools.jar
  7989 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/jsr181-api.jar
 45142 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/management-api.jar
 63134 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/mimepull.jar
161631 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/policy.jar
 68177 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/resolver.jar
474791 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/saaj-impl.jar
 33739 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/stax-ex.jar
182112 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/stax2-api.jar
 65851 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/streambuffer.jar
482245 Thu Feb 07 17:19:08 CET 2019 WEB-INF/lib/woodstox-core-asl.jar
   268 Thu Feb 07 17:19:08 CET 2019 WEB-INF/sun-jaxws.xml
   794 Thu Feb 07 17:19:08 CET 2019 WEB-INF/web.xml
   
/ 13131313

ERVELDEN@LBNL031514 MINGW64 ~/bin/apache-tomcat-7.0.82
$ vi conf/tomcat-users.xml
...        <role rolename="manager-gui"/>
        <role rolename="manager-script"/>
        <user username="gui" password="gui" roles="manager-gui"/>
        <user username="script" password="script" roles="manager-script"/>
</tomcat-users>

/ ga naar 
localhost:8080
/ klik 'Manager App',
/ log in met gui, gui,
http://localhost:8080/manager/html
/ in het midden zien we 'War file to deploy', 
/ we zien in de lijst erboven: /WebServiceExample-${DSTAMP}
/ klik daarop	, we zien in de url balk,
http://localhost:8080/WebServiceExample-$%7BDSTAMP%7D/

$ cat WEB-INF/web.xml

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>SOAPWithJaxWS</display-name>

  <listener>
                <listener-class>
                        com.sun.xml.ws.transport.http.servlet.WSServletContextListener
                </listener-class>
        </listener>
        <servlet>
                <servlet-name>xyz</servlet-name>
                <servlet-class>
                        com.sun.xml.ws.transport.http.servlet.WSServlet
                </servlet-class>
                <load-on-startup>1</load-on-startup>
        </servlet>
        <servlet-mapping>
                <servlet-name>xyz</servlet-name>
                <url-pattern>/discoverIndia</url-pattern>
        </servlet-mapping>

</web-app>

/ dus we zien dat WSServlet de servlet is, 
/ maar hoe is die connect met 
./src/net/mahtabalam/ws/Country.java
./src/net/mahtabalam/ws/CountryImpl.java
/ TODO

$ vi build.xml

  <property name="projectName" value="WebServiceExample"/>
  <target name="war">
                <copy todir="dist/war/build/WEB-INF/">
                        <fileset dir="${webcontent}/WEB-INF/"/>
                </copy>
                <copy todir="dist/war/build/WEB-INF/classes/">
                        <fileset dir="${build}/classes/"/>
                  
                     
                </copy>

                <jar jarfile="dist/war/${projectName}-{DSTAMP}.war" basedir="${dist}/war/build/"/>



/ omdat we geen <tstamp/> hebben gedaan, werkt  ${DSTAMP} niet , we zien,
/ geef, OK	,
http://localhost:8080/WebServiceExample-$%7BDSTAMP%7D/discoverIndia

/ straks gaan we de context path veranderen,

/ 131313	. 

/ al de gen classes zijn voor de client, 
/ BVV is ook een client, vandaar de gen classes in BVV	,

/ 131313	. 

/ in de list in de gui kunnen we makkelijk een webapp undeploy	,

/ oorspronkelijk had de discoverIndia webapp geen build.xml, maar we hebben die copy van mkyong,

$ vi build.xml 

<project name="ProjectName" default="dist" basedir=".">
   
  <property name="projectName" value="SOAPWithJaxWS"/>
  <target name="war">
                <copy todir="dist/war/build/WEB-INF/">
                        <fileset dir="${webcontent}/WEB-INF/"/>
                </copy>
                <copy todir="dist/war/build/WEB-INF/classes/">
                        <fileset dir="${build}/classes/">
                                <exclude name="**/wsclient/*.class"/>
                        </fileset>
                </copy>

                <jar jarfile="dist/war/${projectName}.war" basedir="${dist}/war/build/"/>

$ rm -rf dist
$ ant war

ERVELDEN@LBNL031514 MINGW64 ~/java/quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my (master)
$ jar tvf dist/war/SOAPWithJaxWS.war
     0 Thu Feb 07 22:32:18 CET 2019 META-INF/
   105 Thu Feb 07 22:32:16 CET 2019 META-INF/MANIFEST.MF
     0 Thu Feb 07 22:32:18 CET 2019 WEB-INF/
     0 Thu Feb 07 22:32:18 CET 2019 WEB-INF/classes/
     0 Thu Feb 07 22:32:18 CET 2019 WEB-INF/classes/net/
     0 Thu Feb 07 22:32:18 CET 2019 WEB-INF/classes/net/mahtabalam/
     0 Thu Feb 07 22:32:18 CET 2019 WEB-INF/classes/net/mahtabalam/ws/
     0 Thu Feb 07 22:32:18 CET 2019 WEB-INF/classes/wsclient/
     0 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/
   485 Thu Feb 07 22:32:18 CET 2019 WEB-INF/classes/net/mahtabalam/ws/Country.class
  1483 Thu Feb 07 22:32:18 CET 2019 WEB-INF/classes/net/mahtabalam/ws/CountryImpl.class
  2005 Thu Feb 07 22:32:18 CET 2019 WEB-INF/classes/net/mahtabalam/ws/State.class
  5895 Thu Feb 07 22:32:18 CET 2019 WEB-INF/classes/net/mahtabalam/ws/Utility.class
296714 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/FastInfoset.jar
 21820 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/gmbal-api-only.jar
 36383 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/ha-api.jar
 26366 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/javax.annotation-api.jar
 41135 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/javax.xml.soap-api.jar
102308 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/jaxb-api.jar
234226 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/jaxb-core.jar
1040864 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/jaxb-impl.jar
123384 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/jaxb-jxc.jar
2025279 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/jaxb-xjc.jar
 50360 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/jaxws-api.jar
2505911 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/jaxws-rt.jar
841775 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/jaxws-tools.jar
  7989 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/jsr181-api.jar
 45142 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/management-api.jar
 63134 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/mimepull.jar
161631 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/policy.jar
 68177 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/resolver.jar
474791 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/saaj-impl.jar
 33739 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/stax-ex.jar
182112 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/stax2-api.jar
 65851 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/streambuffer.jar
482245 Thu Feb 07 22:32:18 CET 2019 WEB-INF/lib/woodstox-core-asl.jar
   268 Thu Feb 07 22:32:18 CET 2019 WEB-INF/sun-jaxws.xml
   794 Thu Feb 07 22:32:18 CET 2019 WEB-INF/web.xml



/ run de client,

ERVELDEN@LBNL031514 MINGW64 ~/java/quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my (master)
$ java -cp build/classes/ wsclient.Client
Capital of Kerala : Thiruvananthapuram
No. of districts in Telangna : 10
Local languages of Gujrat : Hindi, Gujrati
Airports in Uttrakhand : Dehradun
Places to visit in Rajasthan : Ajmer, Udaipur, Jaipur
Interesting Facts about Meghalaya : Meghalaya is the only state in India which have English as its official language

/ 131313	. 

/ we hebben saved in,

ERVELDEN@LBNL031514 MINGW64 ~/java/quickstart/abc-wsgen-wsimport (10.x)
$ cp -a discoverIndia-soap-web-service-my discoverIndia-soap-web-service-my-works

/ 131313	. 

/ we gaan zelf compile,

/ omdat we de init target passeren, wordt <tstamp/> gedaan en werkt ${DSTAMP},

$ vi build.xml

$ cat build.xml
<project name="ProjectName" default="dist" basedir=".">

  <!-- set global properties for this build -->
  <property name="projectName" value="SOAPWithJaxWS"/>
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="webcontent"  location="WebContent"/>

  <target name="init">
        <tstamp/>
        <mkdir dir="${build}/classes"/>
  </target>

  <target name="compile"  depends="init">
                <javac srcdir="${src}" destdir="${build}/classes"/>
  </target>

  <target name="dist" depends="compile">
        <mkdir dir="${dist}/lib"/>
        <jar jarfile="dist/lib/${projectName}-${DSTAMP}.jar" basedir="build"/>
  </target>

  <target name="war"  depends="compile">

                <!--<mkdir dir="${dist}/war"/>-->

                <copy todir="dist/war/build/WEB-INF/">
                        <fileset dir="${webcontent}/WEB-INF/"/>
                </copy>
                <copy todir="dist/war/build/WEB-INF/classes/">
                        <fileset dir="${build}/classes/">
                                <exclude name="**/wsclient/*.class"/>
                        </fileset>
                </copy>

                <jar jarfile="dist/war/${projectName}-${DSTAMP}.war" basedir="${dist}/war/build/"/>

  </target>

  <target name="clean">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
  </target>
</project>

/ in target compile moeten we eerst (via init) mkdir doen	, anders krijgen we ERR dat die dirs niet bestaan	, 
/ maar in target dist hoeft dat niet, we hoeven niet eerst dist/war te maken,
/ komt dat omdat de copy target dat doet? 
/ TODO

$ ant clean war
/ OK
ERVELDEN@LBNL031514 MINGW64 ~/java/quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my (master)
$ jar tvf dist/war/SOAPWithJaxWS-20190208.war
     0 Fri Feb 08 08:23:58 CET 2019 META-INF/
   105 Fri Feb 08 08:23:56 CET 2019 META-INF/MANIFEST.MF
     0 Fri Feb 08 08:23:58 CET 2019 WEB-INF/
     0 Fri Feb 08 08:23:58 CET 2019 WEB-INF/classes/
     0 Fri Feb 08 08:23:58 CET 2019 WEB-INF/classes/net/
     0 Fri Feb 08 08:23:58 CET 2019 WEB-INF/classes/net/mahtabalam/
     0 Fri Feb 08 08:23:58 CET 2019 WEB-INF/classes/net/mahtabalam/ws/
     0 Fri Feb 08 08:23:58 CET 2019 WEB-INF/classes/wsclient/
     0 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/
   449 Fri Feb 08 08:23:58 CET 2019 WEB-INF/classes/net/mahtabalam/ws/Country.class
  1048 Fri Feb 08 08:23:58 CET 2019 WEB-INF/classes/net/mahtabalam/ws/CountryImpl.class
  1247 Fri Feb 08 08:23:58 CET 2019 WEB-INF/classes/net/mahtabalam/ws/State.class
  4924 Fri Feb 08 08:23:58 CET 2019 WEB-INF/classes/net/mahtabalam/ws/Utility.class
296714 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/FastInfoset.jar
 21820 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/gmbal-api-only.jar
 36383 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/ha-api.jar
 26366 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/javax.annotation-api.jar
 41135 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/javax.xml.soap-api.jar
102308 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/jaxb-api.jar
234226 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/jaxb-core.jar
1040864 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/jaxb-impl.jar
123384 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/jaxb-jxc.jar
2025279 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/jaxb-xjc.jar
 50360 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/jaxws-api.jar
2505911 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/jaxws-rt.jar
841775 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/jaxws-tools.jar
  7989 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/jsr181-api.jar
 45142 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/management-api.jar
 63134 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/mimepull.jar
161631 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/policy.jar
 68177 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/resolver.jar
474791 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/saaj-impl.jar
 33739 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/stax-ex.jar
182112 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/stax2-api.jar
 65851 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/streambuffer.jar
482245 Fri Feb 08 08:23:58 CET 2019 WEB-INF/lib/woodstox-core-asl.jar
   268 Fri Feb 08 08:23:58 CET 2019 WEB-INF/sun-jaxws.xml
   794 Fri Feb 08 08:23:58 CET 2019 WEB-INF/web.xml

/ geef, 
http://localhost:8080/SOAPWithJaxWS-20190208/discoverIndia
/ OK	,

/ 131313	.

/ maak pom.xml

/ 13131313	. 

/ met deze pom kunnen we al clean doen:

$ vi pom.xml

 $ cat pom.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>my.own.ws</groupId>
    <artifactId>SOAPWithJaxWS</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
</project>

$ mvn clean
/ OK	,

/ 131313	. 

/ set src/net/mahtabalam/ws/Country.java naar src/main/java/net/mahtabalam/ws/Country.java

$ mkdir -p src/main/java

/ NIET ZO:
$ cp -a src/net/mahtabalam/ws/ src/main/java
$ find src/main/java
src/main/java
src/main/java/ws
src/main/java/ws/Country.java
src/main/java/ws/CountryImpl.java
src/main/java/ws/State.java
src/main/java/ws/Utility.java

/ OK,
$ mkdir -p src/main/java/net/mahtabalam/ws
$ cp src/net/mahtabalam/ws/* src/main/java/net/mahtabalam/ws/

$ mkdir -p src/main/resources
$ cp WebContent/WEB-INF/*.xml src/main/resources/
$ ls src/main/resources/
sun-jaxws.xml  web.xml

$ find
./target
./target/classes
./target/classes/net
./target/classes/net/mahtabalam
./target/classes/net/mahtabalam/ws
./target/classes/net/mahtabalam/ws/Country.class
./target/classes/net/mahtabalam/ws/CountryImpl.class
./target/classes/net/mahtabalam/ws/State.class
./target/classes/net/mahtabalam/ws/Utility.class
./target/classes/sun-jaxws.xml
./target/classes/web.xml

$  mvn package
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-war-plugin:2.2:war (default-war) on project SOAPWithJaxWS: Error assembling WAR: webxml attribute is required (or pre-existing WEB-INF/web.xml if executing in update mode) -> [Help 1]

$ rm src/main/resources/*

$ mkdir src/main/webapp/WEB-INF
$ cp WebContent/WEB-INF/*.xml src/main/webapp/WEB-INF/

/ Mijn pom is nog steeds	,

$ cat pom.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>my.own.ws</groupId>
    <artifactId>SOAPWithJaxWS</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <properties>
            <maven.compiler.source>1.8</maven.compiler.source>
            <maven.compiler.target>1.8</maven.compiler.target>
        </properties>
</project>


$ mvn clean package
$ jar tvf target/SOAPWithJaxWS-0.0.1-SNAPSHOT.war
     0 Fri Feb 08 09:20:48 CET 2019 META-INF/
   134 Fri Feb 08 09:20:46 CET 2019 META-INF/MANIFEST.MF
     0 Fri Feb 08 09:20:48 CET 2019 WEB-INF/
     0 Fri Feb 08 09:20:48 CET 2019 WEB-INF/classes/
     0 Fri Feb 08 09:20:48 CET 2019 WEB-INF/classes/net/
     0 Fri Feb 08 09:20:48 CET 2019 WEB-INF/classes/net/mahtabalam/
     0 Fri Feb 08 09:20:48 CET 2019 WEB-INF/classes/net/mahtabalam/ws/
   485 Fri Feb 08 09:20:46 CET 2019 WEB-INF/classes/net/mahtabalam/ws/Country.class
  1483 Fri Feb 08 09:20:46 CET 2019 WEB-INF/classes/net/mahtabalam/ws/CountryImpl.class
  2005 Fri Feb 08 09:20:46 CET 2019 WEB-INF/classes/net/mahtabalam/ws/State.class
  5893 Fri Feb 08 09:20:46 CET 2019 WEB-INF/classes/net/mahtabalam/ws/Utility.class
   268 Fri Feb 08 09:16:26 CET 2019 WEB-INF/sun-jaxws.xml
   794 Fri Feb 08 09:16:26 CET 2019 WEB-INF/web.xml
     0 Fri Feb 08 09:20:48 CET 2019 META-INF/maven/
     0 Fri Feb 08 09:20:48 CET 2019 META-INF/maven/my.own.ws/
     0 Fri Feb 08 09:20:48 CET 2019 META-INF/maven/my.own.ws/SOAPWithJaxWS/
   452 Fri Feb 08 08:52:46 CET 2019 META-INF/maven/my.own.ws/SOAPWithJaxWS/pom.xml
   121 Fri Feb 08 09:20:48 CET 2019 META-INF/maven/my.own.ws/SOAPWithJaxWS/pom.properties

/ 13131313	.

/ vergl met wildfly-helloworld-ws/,

/ we hebben mvn target in eclipse, helloworld-ws-clean-install-wildfly-deploy, die $ mvn clean install wildfly:deploy doet, 

ERVELDEN@LBNL031514 MINGW64 ~/java/quickstart/helloworld-ws (10.x)
$ jar tvf target/wildfly-helloworld-ws.war
    99 Fri Feb 08 09:34:40 CET 2019 META-INF/MANIFEST.MF
     0 Fri Feb 08 09:34:40 CET 2019 META-INF/
     0 Fri Feb 08 09:34:40 CET 2019 WEB-INF/
     0 Fri Feb 08 09:34:40 CET 2019 WEB-INF/classes/
     0 Fri Feb 08 09:34:40 CET 2019 WEB-INF/classes/org/
     0 Fri Feb 08 09:34:40 CET 2019 WEB-INF/classes/org/jboss/
     0 Fri Feb 08 09:34:40 CET 2019 WEB-INF/classes/org/jboss/as/
     0 Fri Feb 08 09:34:40 CET 2019 WEB-INF/classes/org/jboss/as/quickstarts/
     0 Fri Feb 08 09:34:40 CET 2019 WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/
  1621 Thu Jan 31 22:53:46 CET 2019 index.html
  1300 Thu Jan 31 22:53:46 CET 2019 WEB-INF/beans.xml
   614 Fri Feb 08 09:34:38 CET 2019 WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/HelloWorldService.class
  2171 Fri Feb 08 09:34:38 CET 2019 WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/HelloWorldServiceImpl.class
 12291 Fri Feb 01 09:57:12 CET 2019 META-INF/maven/org.wildfly.quickstarts/wildfly-helloworld-ws/pom.xml
   124 Fri Feb 08 09:34:40 CET 2019 META-INF/maven/org.wildfly.quickstarts/wildfly-helloworld-ws/pom.properties

/ we zien geen deps	, 
/ WH zitten die in wildfly, provided	,

/ 13131313	. 

/ ga naar 
https://javaee.github.io/metro-jax-ws/
/ klik Download
/ open de zip, jaxws-ri-2.3.1.zip,
	jaxws-ri
		lib
			plugins	/ TODO
			/ alle deps, zoals jaxb-api.jar, jaxws-rt.jar, ...
			
/ klik op Source, we komen op,
github.com/javaee/metro-jax-ws,

/ 131313	. 

ERVELDEN@LBNL031514 MINGW64 ~/java/quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my (master)
$ find
...
./WebContent/WEB-INF/lib
./WebContent/WEB-INF/lib/FastInfoset.jar			V
./WebContent/WEB-INF/lib/gmbal-api-only.jar			V
./WebContent/WEB-INF/lib/ha-api.jar					V
./WebContent/WEB-INF/lib/javax.annotation-api.jar	V
./WebContent/WEB-INF/lib/javax.xml.soap-api.jar		V
./WebContent/WEB-INF/lib/jaxb-api.jar				V
./WebContent/WEB-INF/lib/jaxb-core.jar				
./WebContent/WEB-INF/lib/jaxb-impl.jar
./WebContent/WEB-INF/lib/jaxb-jxc.jar				V
./WebContent/WEB-INF/lib/jaxb-xjc.jar				V
./WebContent/WEB-INF/lib/jaxws-api.jar				V
./WebContent/WEB-INF/lib/jaxws-rt.jar				V
./WebContent/WEB-INF/lib/jaxws-tools.jar			V
./WebContent/WEB-INF/lib/jsr181-api.jar
./WebContent/WEB-INF/lib/management-api.jar			V
./WebContent/WEB-INF/lib/mimepull.jar				V
./WebContent/WEB-INF/lib/policy.jar					V
./WebContent/WEB-INF/lib/resolver.jar
./WebContent/WEB-INF/lib/saaj-impl.jar				V
./WebContent/WEB-INF/lib/stax-ex.jar				V
./WebContent/WEB-INF/lib/stax2-api.jar				V
./WebContent/WEB-INF/lib/streambuffer.jar			V
./WebContent/WEB-INF/lib/woodstox-core-asl.jar		

/ die met V zien we ook in,
D:\Users\ervelden\Downloads\jaxws-ri-2.3.1.zip\lib
/ die zonder V zien we niet in deze lib\	. Maar juist wel in lib\	, 
jaxb-runtime.jar
txw2.jar
woodstox-core.jar

/ we moeten deze lijst als deps opnemen in de pom	,

/ we voegen 1 voor 1 de pkgs toe	, 
/ doe steeds, 
$ mvn clean install
/ we zien dan of de pkgs worden download	,

/ 13131313	. 

/ hieronder doen ze,

            <!-- Binary-->
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-bom</artifactId>
                <version>${jaxb.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
			
/ en niet apart jaxb-api, ...
/ TODO

/ 131313	. 

$  pwd
/c/Users/ervelden/java/quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my

$ vi pom.xml

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>my.own.ws</groupId>
    <artifactId>SOAPWithJaxWS</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <properties>
	    <maven.compiler.source>1.8</maven.compiler.source>
	    <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>
	<dependency>
  <groupId>com.sun.xml.fastinfoset</groupId>
  <artifactId>Fastinfoset</artifactId>
  <version>1.2.16</version>
</dependency>
<dependency>
  <groupId>org.glassfish.gmbal</groupId>
  <artifactId>gmbal-api-only</artifactId>
  <version>3.2.0-b003</version>
</dependency>
<dependency>
  <groupId>org.glassfish.ha</groupId>
  <artifactId>ha-api</artifactId>
  <version>3.1.12</version>
</dependency>
<dependency>
  <groupId>javax.annotation</groupId>
  <artifactId>javax.annotation-api</artifactId>
  <version>1.3.2</version>
</dependency>
<dependency>
  <groupId>javax.xml.soap</groupId>
  <artifactId>javax.xml.soap-api</artifactId>
  <version>1.4.0</version>
</dependency>
<dependency>
  <groupId>javax.xml.bind</groupId>
  <artifactId>jaxb-api</artifactId>
  <version>2.3.1</version>
</dependency>
<dependency>
  <groupId>com.sun.xml.bind</groupId>
  <artifactId>jaxb-core</artifactId>
  <version>2.3.0</version>
</dependency>
<dependency>
  <groupId>com.sun.xml.bind</groupId>
  <artifactId>jaxb-impl</artifactId>
  <version>2.3.0</version>
</dependency>
<dependency>
  <groupId>com.sun.xml.bind</groupId>
  <artifactId>jaxb-xjc</artifactId>
  <version>2.3.0</version>
</dependency>
<dependency>
  <groupId>com.sun.xml.bind</groupId>
  <artifactId>jaxb-jxc</artifactId>
  <version>2.3.0</version>
</dependency>
<dependency>
  <groupId>javax.xml.ws</groupId>
  <artifactId>jaxws-api</artifactId>
  <version>2.3.0</version>
</dependency>
<dependency>
  <groupId>com.sun.xml.ws</groupId>
  <artifactId>jaxws-rt</artifactId>
  <version>2.3.0</version>
  <!--<type>pom</type>-->
</dependency>
<dependency>
  <groupId>com.sun.xml.ws</groupId>
  <artifactId>jaxws-tools</artifactId>
  <version>2.3.0</version> <!-- 2.2.6 -->
</dependency>
<dependency>
  <groupId>javax.jws</groupId>
  <artifactId>jsr181-api</artifactId>
  <version>1.0-MR1</version>
</dependency>
<dependency>
  <groupId>org.glassfish.external</groupId>
  <artifactId>management-api</artifactId>
  <version>3.2.1</version>
</dependency>
<dependency>
  <groupId>org.jvnet.mimepull</groupId>
  <artifactId>mimepull</artifactId>
  <version>1.9.11</version>
</dependency>
<dependency>
  <groupId>com.sun.xml.ws</groupId>
  <artifactId>policy</artifactId>
  <version>2.7.6</version>
</dependency>
<dependency>
  <groupId>com.sun.org.apache.xml.internal</groupId>
  <artifactId>resolver</artifactId>
  <version>20050927</version>
</dependency>
<dependency>
  <groupId>com.sun.xml.messaging.saaj</groupId>
  <artifactId>saaj-impl</artifactId>
  <version>1.5.1</version>
</dependency>
<dependency>
  <groupId>org.jvnet.staxex</groupId>
  <artifactId>stax-ex</artifactId>
  <version>1.8.1</version>
</dependency>
<dependency>
  <groupId>org.codehaus.woodstox</groupId>
  <artifactId>stax2-api</artifactId>
  <version>4.1</version>
</dependency>
<dependency>
  <groupId>com.sun.xml.stream.buffer</groupId>
  <artifactId>streambuffer</artifactId>
  <version>1.5.7</version>
</dependency>
<dependency>
  <groupId>org.codehaus.woodstox</groupId>
  <artifactId>woodstox-core-asl</artifactId>
  <version>4.4.1</version>
</dependency>
    </dependencies>
</project>

$ mvn clean packageERVELDEN@LBNL031514 MINGW64 ~/java/quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my (master)
$ jar tvf target/SOAPWithJaxWS-0.0.1-SNAPSHOT.war
     0 Sat Feb 09 21:21:04 CET 2019 META-INF/
   134 Sat Feb 09 21:21:02 CET 2019 META-INF/MANIFEST.MF
     0 Sat Feb 09 21:21:04 CET 2019 WEB-INF/
     0 Sat Feb 09 21:21:04 CET 2019 WEB-INF/classes/
     0 Sat Feb 09 21:21:04 CET 2019 WEB-INF/classes/net/
     0 Sat Feb 09 21:21:04 CET 2019 WEB-INF/classes/net/mahtabalam/
     0 Sat Feb 09 21:21:04 CET 2019 WEB-INF/classes/net/mahtabalam/ws/
     0 Sat Feb 09 21:21:04 CET 2019 WEB-INF/lib/
   485 Sat Feb 09 21:21:02 CET 2019 WEB-INF/classes/net/mahtabalam/ws/Country.class
  1483 Sat Feb 09 21:21:02 CET 2019 WEB-INF/classes/net/mahtabalam/ws/CountryImpl.class
  2005 Sat Feb 09 21:21:02 CET 2019 WEB-INF/classes/net/mahtabalam/ws/State.class
  5893 Sat Feb 09 21:21:02 CET 2019 WEB-INF/classes/net/mahtabalam/ws/Utility.class
296714 Sun Sep 03 19:25:02 CEST 2017 WEB-INF/lib/FastInfoset-1.2.13.jar
317195 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/Fastinfoset-1.2.16.jar
 22032 Fri Feb 08 17:29:34 CET 2019 WEB-INF/lib/gmbal-api-only-3.2.0-b003.jar
 36399 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/ha-api-3.1.12.jar
 27156 Thu Jan 31 16:07:00 CET 2019 WEB-INF/lib/istack-commons-runtime-3.0.8.jar
 44399 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/jakarta.activation-api-1.2.1.jar
115498 Thu Jan 31 16:07:00 CET 2019 WEB-INF/lib/jakarta.xml.bind-api-2.3.2.jar
 36161 Thu Jan 31 16:07:00 CET 2019 WEB-INF/lib/jakarta.xml.soap-api-1.4.1.jar
 56674 Fri Feb 08 22:39:04 CET 2019 WEB-INF/lib/javax.activation-api-1.2.0.jar
 26586 Tue Jun 12 11:55:14 CEST 2018 WEB-INF/lib/javax.annotation-api-1.3.2.jar
 46111 Fri Feb 08 22:33:34 CET 2019 WEB-INF/lib/javax.xml.soap-api-1.4.0.jar
128076 Fri Feb 08 22:39:04 CET 2019 WEB-INF/lib/jaxb-api-2.3.1.jar
255502 Fri Oct 13 09:29:04 CEST 2017 WEB-INF/lib/jaxb-core-2.3.0.jar
963660 Fri Feb 08 22:39:04 CET 2019 WEB-INF/lib/jaxb-impl-2.3.0.jar
138671 Fri Oct 13 09:29:10 CEST 2017 WEB-INF/lib/jaxb-jxc-2.3.0.jar
1992830 Fri Oct 13 09:29:10 CEST 2017 WEB-INF/lib/jaxb-xjc-2.3.0.jar
 52437 Sat Feb 09 20:47:24 CET 2019 WEB-INF/lib/jaxws-api-2.3.0.jar
2613698 Sat Feb 09 20:47:30 CET 2019 WEB-INF/lib/jaxws-rt-2.3.0.jar
903852 Sat Feb 09 20:47:28 CET 2019 WEB-INF/lib/jaxws-tools-2.3.0.jar
  7989 Sun Sep 03 19:21:50 CEST 2017 WEB-INF/lib/jsr181-api-1.0-MR1.jar
 45451 Thu Jan 31 16:07:02 CET 2019 WEB-INF/lib/management-api-3.2.1.jar
 67125 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/mimepull-1.9.11.jar
181165 Thu Jan 31 16:07:00 CET 2019 WEB-INF/lib/policy-2.7.6.jar
 68177 Tue Oct 10 21:55:08 CEST 2017 WEB-INF/lib/resolver-20050927.jar
457331 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/saaj-impl-1.5.1.jar
 23346 Wed Aug 09 12:48:18 CEST 2017 WEB-INF/lib/stax-api-1.0-2.jar
 38099 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/stax-ex-1.8.1.jar
169541 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/stax2-api-4.1.jar
 73918 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/streambuffer-1.5.7.jar
 72080 Thu Jan 31 17:09:50 CET 2019 WEB-INF/lib/txw2-2.3.2.jar
513602 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/woodstox-core-5.1.0.jar
486013 Fri Sep 01 12:51:30 CEST 2017 WEB-INF/lib/woodstox-core-asl-4.4.1.jar
   268 Fri Feb 08 09:16:26 CET 2019 WEB-INF/sun-jaxws.xml
   794 Fri Feb 08 09:16:26 CET 2019 WEB-INF/web.xml
     0 Sat Feb 09 21:21:04 CET 2019 META-INF/maven/
     0 Sat Feb 09 21:21:04 CET 2019 META-INF/maven/my.own.ws/
     0 Sat Feb 09 21:21:04 CET 2019 META-INF/maven/my.own.ws/SOAPWithJaxWS/
  3902 Sat Feb 09 21:13:40 CET 2019 META-INF/maven/my.own.ws/SOAPWithJaxWS/pom.xml
   121 Sat Feb 09 21:21:04 CET 2019 META-INF/maven/my.own.ws/SOAPWithJaxWS/pom.properties

/ deploy in Tomcat GUI	,
/ OK,

/ 131313	. 

/ maven compiles alles in src/main/java,	 en stopt die in de war, in WEB-INF/classes/,

/ lees,
https://stackoverflow.com/questions/9752972/how-to-add-an-extra-source-directory-for-maven-to-compile-and-include-in-the-bui

/ Als we aan de pom toevoegen	,

    <build>
    <resources>
		  <resource>
			<directory>
				src/wsclient
				</directory>
				</resource>
				</resources>
    
    </build>
	
/ dan compiles mvn src/Client.java ook , en alle gen classes, maar deze komen ook in de WAR, 

/ Maar we hoeven dat helemaal niet te doen, want wsimport doet dat ook: 
/ de appl runs, dus we kunnen de url opgeven	,
wsimport -keep -d src/wsclient http://localhost:8080/SOAPWithJaxWS-0.0.1-SNAPSHOT/discoverIndia?wsdl

$ wsimport -keep -d src -p wsclient http://localhost:8080/SOAPWithJaxWS-0.0.1-SNAPSHOT/discoverIndia?wsdl
/ alle gen classes in pkg wsclient,

$  javac -classpath src src/wsclient/Client.java

$ find src 
...
src/wsclient
src/wsclient/Client.class
src/wsclient/Client.java
src/wsclient/CountryImpl.class
src/wsclient/CountryImpl.java
src/wsclient/CountryImplService.class
src/wsclient/CountryImplService.java
...

ERVELDEN@LBNL031514 MINGW64 ~/java/quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my (master)
$ java -cp src wsclient.Client
Capital of Kerala : Thiruvananthapuram
No. of districts in Telangna : 10
Local languages of Gujrat : Hindi, Gujrati
Airports in Uttrakhand : Dehradun
Places to visit in Rajasthan : Ajmer, Udaipur, Jaipur
Interesting Facts about Meghalaya : Meghalaya is the only state in India which have English as its official language

/ 131313	. 

$ cat src/wsclient/Client.java
package wsclient;

public class Client {

   public static void main(String[] args) {
       CountryImplService service=new CountryImplService();
       CountryImpl country=service.getCountryImplPort();
       System.out.println("Capital of Kerala : "+country.getCapital("Kerala"));
...

$ cat src/wsclient/CountryImplService.java

package wsclient;
...
/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "CountryImplService", targetNamespace = "http://ws.mahtabalam.net/", wsdlLocation = "http://localhost:8080/SOAPWithJaxWS-0.0.1-SNAPSHOT/discoverIndia?wsdl")
public class CountryImplService
    extends Service
{

    private final static URL COUNTRYIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException COUNTRYIMPLSERVICE_EXCEPTION;
    private final static QName COUNTRYIMPLSERVICE_QNAME = new QName("http://ws.mahtabalam.net/", "CountryImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/SOAPWithJaxWS-0.0.1-SNAPSHOT/discoverIndia?wsdl");
...
			COUNTRYIMPLSERVICE_WSDL_LOCATION = url;

    private static URL __getWsdlLocation() {
        ...
        return COUNTRYIMPLSERVICE_WSDL_LOCATION;
    }
	
    public CountryImplService() {
        super(__getWsdlLocation(), COUNTRYIMPLSERVICE_QNAME);
    }
	...
			
			
//////////////
/ Hier zien we de url die we aan wsimport hebben gegeven	, 

/ we hebben in de pom alle deps expliciet in <dependencies>, 
$ pwd
/c/Users/ervelden/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my-works2

/ herhaling:
ERVELDEN@LBNL031514 MINGW64 ~/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my (master)
$ ls 




$ mvn clean package
$ catalina.bat start
/ en upload de war target/SOAPWithJaxWS-0.0.1-SNAPSHOT.war in de gui
$ wsimport -keep -d src -p wsclient http://localhost:8080/SOAPWithJaxWS-0.0.1-SNAPSHOT/discoverIndia?wsdl
$ javac -cp src src/wsclient/Client.java
$ java -cp src wsclient.Client
Capital of Kerala : Thiruvananthapuram
No. of districts in Telangna : 10
Local languages of Gujrat : Hindi, Gujrati
Airports in Uttrakhand : Dehradun
Places to visit in Rajasthan : Ajmer, Udaipur, Jaipur
Interesting Facts about Meghalaya : Meghalaya is the only state in India which have English as its official language

/ 131313	. 

/ in search.maven.org stond deze dep alleen als <type>pom</type>, maar default type jar is er ook, wordt gewoon download in de local repo, als we geen <type> vermelden in de pom (jar is default)	,
 <groupId>com.sun.xml.ws</groupId>
  <artifactId>jaxws-rt</artifactId>
  <version>2.3.0</version>
  <!--<type>pom</type>-->
/ TODO

/ 131313	. 

/ wat gebeurt er als we alle expliciete deps in <dependencyManagement> set?

    <dependencyManagement>
			<dependencies>	
				/ alle deps

$ mvn clean package

/ we zien dat geen enkele jar in de war's WEB-INF/lib/ komt,

/ we zetten ze daarnaast allemaal in <dependencies> zonder version,

    <dependencies>
    	<dependency>
  <groupId>com.sun.xml.fastinfoset</groupId>
  <artifactId>Fastinfoset</artifactId>
</dependency>
...

/ en dan is het OK, alle JARs zitten weer in WEB-INF/lib,

/ 131313	. 

/ we zetten alle JARs in tomcat's lib/ en set in de pom de scope provided, 
/ wat is het verschil tussen scope provided en gewoon heel de dep weglaten in de pom, wat is het verschil in de WAR's lib/?

/ 131313	. 

/ FINAL JAX-WS TOMCAT 

ERVELDEN@LBNL031514 MINGW64 ~/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my (master)

/ use 	,
ERVELDEN@LBNL031514 MINGW64 ~/bin/apache-tomcat-9.0.16

$ cat  conf/tomcat-users.xml
...
	<role rolename="manager-gui"/>
	<role rolename="manager-script"/>
	<user username="gui" password="gui" roles="manager-gui"/>
	<user username="script" password="script" roles="manager-script"/>
</tomcat-users>

$ bin\catalina.bat start

/ we doen steeds,
ERVELDEN@LBNL031514 MINGW64 ~/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my (master)
$ mvn clean package
/ deploy de WAR in target/ met de tomcat GUI
$   wsimport -keep -d src -p wsclient http://localhost:8080/SOAPWithJaxWS-0.0.1-SNAPSHOT/discoverIndia?wsdl
$ javac -cp src src/wsclient/Client.java
$ java -cp src wsclient.Client
Capital of Kerala : Thiruvananthapuram
No. of districts in Telangna : 10
Local languages of Gujrat : Hindi, Gujrati
Airports in Uttrakhand : Dehradun
Places to visit in Rajasthan : Ajmer, Udaipur, Jaipur
Interesting Facts about Meghalaya : Meghalaya is the only state in India which have English as its official language


$ vi pom.xml

<project ...>
    <groupId>my.own.ws</groupId>
    <artifactId>SOAPWithJaxWS</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <properties>
	    <maven.compiler.source>1.8</maven.compiler.source>
	    <maven.compiler.target>1.8</maven.compiler.target>
    </properties>
   
    <dependencyManagement>
		<dependencies>	
			<dependency>
			  <groupId>com.sun.xml.ws</groupId>
			  <artifactId>jaxws-tools</artifactId>	<!-- jaxws-tools of jaxws-ri WEL, jaxws-rt NIET -->
			  <version>2.3.0</version>		<!-- 2.3.0 of 2.3.2 -->
			  <type>pom</type>
			</dependency>
		</dependencies>
    </dependencyManagement>
    <dependencies>
		<dependency>
		  <groupId>com.sun.xml.ws</groupId>
		  <artifactId>jaxws-tools</artifactId>  <!-- jaxws-tools of jaxws-ri WEL, jaxws-rt NIET -->
		  <type>pom</type>
		</dependency>
    </dependencies>
</project>

/ als er <type>pom</type> staat in dependencyManagement, dan ook in dependencies,

/ we hebben <type>pom, maar toch zien we in de WAR de JARs,

/ de JARs verschillen of je versie 2.3.0 nemen, of 2.3.2	,


ERVELDEN@LBNL031514 MINGW64 ~/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my (master)

/ com.sun.xml.ws:jaxws-rt:2.3.0	, 
/ werkt NIET,
$ ls target/SOAPWithJaxWS-0.0.1-SNAPSHOT/WEB-INF/lib/
FastInfoset-1.2.13.jar         management-api-3.0.0-b012.jar
gmbal-api-only-3.1.0-b001.jar  mimepull-1.9.7.jar
ha-api-3.1.9.jar               policy-2.7.2.jar
javax.annotation-api-1.3.jar   resolver-20050927.jar
javax.xml.soap-api-1.4.0.jar   saaj-impl-1.4.0.jar
jaxb-api-2.3.0.jar             stax2-api-3.1.4.jar
jaxb-core-2.3.0.jar            stax-ex-1.7.8.jar
jaxb-impl-2.3.0.jar            streambuffer-1.5.4.jar
jaxws-api-2.3.0.jar            woodstox-core-asl-4.4.1.jar
jsr181-api-1.0-MR1.jar

/ com.sun.xml.ws:jaxws-tools:2.3.0
$ ls target/SOAPWithJaxWS-0.0.1-SNAPSHOT/WEB-INF/lib/
FastInfoset-1.2.13.jar         jaxws-rt-2.3.0.jar
gmbal-api-only-3.1.0-b001.jar  jsr181-api-1.0-MR1.jar
ha-api-3.1.9.jar               management-api-3.0.0-b012.jar
javax.annotation-api-1.3.jar   mimepull-1.9.7.jar
javax.xml.soap-api-1.4.0.jar   policy-2.7.2.jar
jaxb-api-2.3.0.jar             resolver-20050927.jar
jaxb-core-2.3.0.jar            saaj-impl-1.4.0.jar
jaxb-impl-2.3.0.jar            stax2-api-3.1.4.jar
jaxb-jxc-2.3.0.jar             stax-ex-1.7.8.jar
jaxb-xjc-2.3.0.jar             streambuffer-1.5.4.jar
jaxws-api-2.3.0.jar            woodstox-core-asl-4.4.1.jar

/ com.sun.xml.ws:jaxws-ri:2.3.0
$ ls target/SOAPWithJaxWS-0.0.1-SNAPSHOT/WEB-INF/lib/
commonj.sdo-2.1.1.jar                jaxws-eclipselink-plugin-2.3.0.jar
commonj.sdo-2.1.1.v201112051852.jar  jaxws-rt-2.3.0.jar
eclipselink-2.6.4.jar                jaxws-tools-2.3.0.jar
FastInfoset-1.2.13.jar               jsr181-api-1.0-MR1.jar
gmbal-api-only-3.1.0-b001.jar        mail-1.4.7.jar
ha-api-3.1.9.jar                     management-api-3.0.0-b012.jar
javax.annotation-api-1.3.jar         mimepull-1.9.7.jar
javax.json-1.0.4.jar                 policy-2.7.2.jar
javax.persistence-2.1.1.jar          resolver-20050927.jar
javax.xml.soap-api-1.4.0.jar         saaj-impl-1.4.0.jar
jaxb-api-2.3.0.jar                   sdo-eclipselink-plugin-2.3.0.jar
jaxb-core-2.3.0.jar                  stax2-api-3.1.4.jar
jaxb-impl-2.3.0.jar                  stax-ex-1.7.8.jar
jaxb-jxc-2.3.0.jar                   streambuffer-1.5.4.jar
jaxb-xjc-2.3.0.jar                   validation-api-1.1.0.Final.jar
jaxws-api-2.3.0.jar                  woodstox-core-asl-4.4.1.jar


/ com.sun.xml.ws:jaxws-ri:2.3.2
$ ls target/SOAPWithJaxWS-0.0.1-SNAPSHOT/WEB-INF/lib/
commonj.sdo-2.1.1.jar               mimepull-1.9.11.jar
FastInfoset-1.2.16.jar              org.eclipse.persistence.asm-2.7.4.jar
gmbal-4.0.0.jar                     org.eclipse.persistence.core-2.7.4.jar
ha-api-3.1.12.jar                   org.eclipse.persistence.moxy-2.7.4.jar
istack-commons-runtime-3.0.8.jar    org.eclipse.persistence.sdo-2.7.4.jar
jakarta.activation-api-1.2.1.jar    pfl-asm-4.0.1.jar
jakarta.annotation-api-1.3.4.jar    pfl-basic-4.0.1.jar
jakarta.jws-api-1.1.1.jar           pfl-basic-tools-4.0.1.jar
jakarta.mail-api-1.6.3.jar          pfl-dynamic-4.0.1.jar
jakarta.persistence-api-2.2.2.jar   pfl-tf-4.0.1.jar
jakarta.xml.bind-api-2.3.2.jar      pfl-tf-tools-4.0.1.jar
jakarta.xml.soap-api-1.4.1.jar      policy-2.7.6.jar
jakarta.xml.ws-api-2.3.2.jar        saaj-impl-1.5.1.jar
jaxb-jxc-2.3.2.jar                  sdo-eclipselink-plugin-2.3.2.jar
jaxb-runtime-2.3.2.jar              stax2-api-4.1.jar
jaxb-xjc-2.3.2.jar                  stax-ex-1.8.1.jar
jaxws-eclipselink-plugin-2.3.2.jar  streambuffer-1.5.7.jar
jaxws-rt-2.3.2.jar                  txw2-2.3.2.jar
jaxws-tools-2.3.2.jar               woodstox-core-5.1.0.jar
management-api-3.2.1.jar

/ https://access.redhat.com/documentation/en-us/red_hat_jboss_fuse/6.2/html/apache_cxf_development_guide/jaxwswsdlbootstrapcatalog13	. 

/ 13	. 


$ pwd
/c/Users/ervelden/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my
$ mvn clean package
/ deploy in wildfly:
http://localhost:9990/console/

/ Maar,
12:21:51,967 SEVERE [com.sun.xml.ws.server.http] (ServerService Thread Pool -- 74) WSSERVLET11: failed to parse runtime descriptor: java.lang.NoClassDefFoundError: com/sun/org/apache/xml/internal/resolver/CatalogManager: java.lang.NoClassDefFoundError: com/sun/org/apache/xml/internal/resolver/CatalogManager

/ 1313	. 

/ lees,
https://access.redhat.com/documentation/en-us/red_hat_jboss_fuse/6.2/html/apache_cxf_development_guide/jaxwswsdlbootstrapcatalog

/ 1313	. 

/ lees,
https://www.superglobals.net/java-ee-soap-example/
<dependencies>
    <dependency>
        <groupId>com.sun.xml.ws</groupId>
        <artifactId>jaxws-rt</artifactId>
        <version>2.1.3</version>
        <scope>compile</scope>
    </dependency>
</dependencies>

/ 1313	. 

/ google,
wildfly CatalogManager
/ lees,
https://access.redhat.com/solutions/1609613
$ jar tvf modules/system/layers/base/org/apache/xml-resolver/main/xml-resolver-1.2.jar | grep CatalogManager
 11484 Mon Nov 20 15:22:10 CET 2006 org/apache/xml/resolver/CatalogManager.class
/
<module xmlns="urn:jboss:module:1.1" name="org.apache.xerces">
    <resources>
        <resource-root path="xercesImpl-2.9.1.redhat-5.jar"/>
        <!-- Insert resources here -->
    </resources>
    <dependencies>
        <module name="javax.api"/>
        <!-- <module name="org.apache.xml-resolver" /> IF I ADD THIS DEPEDENCY HERE IT WORKS -->
    </dependencies>
</module>

https://access.redhat.com/documentation/en-us/red_hat_jboss_fuse/6.2/html/apache_cxf_development_guide/jaxwswsdlbootstrapcatalog

/ 1313	. 

/ google
NoClassDefFoundError
/ lees,
https://stackoverflow.com/questions/34413/why-am-i-getting-a-noclassdeffounderror-in-java
This is caused when there is a class file that your code depends on and it is present at compile time but not found at runtime. Look for differences in your build time and runtime classpaths.

https://stackoverflow.com/questions/34413/why-am-i-getting-a-noclassdeffounderror-in-java/5756989#5756989
 

/ 1313	. 

ERVELDEN@LBNL031514 MINGW64 ~/.m2/repository/com/sun/xml/ws
$ jar tvf jaxws-rt/2.3.2/jaxws-rt-2.3.2.jar | grep WSServlet
  6858 Fri Jan 18 15:24:22 CET 2019 com/sun/xml/ws/transport/httpspi/servlet/WSServletDelegate.class
  9920 Fri Jan 18 15:24:22 CET 2019 com/sun/xml/ws/transport/http/servlet/WSServletDelegate.class
  2581 Fri Jan 18 15:24:22 CET 2019 com/sun/xml/ws/transport/http/servlet/WSServlet.class
  1775 Fri Jan 18 15:24:22 CET 2019 com/sun/xml/ws/transport/http/servlet/WSServletContainerInitializer.class
  1346 Fri Jan 18 15:24:22 CET 2019 com/sun/xml/ws/transport/http/servlet/WSServletDelegate$1.class
  9237 Fri Jan 18 15:24:24 CET 2019 com/sun/xml/ws/transport/http/servlet/WSServletContextListener.class
   808 Fri Jan 18 15:24:22 CET 2019 com/sun/xml/ws/transport/http/servlet/WSServletException.class

/ 13	. 

/ 1313	. 

/ jaxws-tools:2.30 heeft dep op resolver-20050927, en dan lukt de deployment 	, de resolver's jar zit in de war:

$ vi pom.xml

    <dependencyManagement>
		<dependencies>	
			<dependency>
			  <groupId>com.sun.xml.ws</groupId>
			  <artifactId>jaxws-tools</artifactId>	
			  <version>2.3.0</version>
			  <type>pom</type>
			</dependency>
		</dependencies>
    </dependencyManagement>
    <dependencies>
		<dependency>
		  <groupId>com.sun.xml.ws</groupId>
		  <artifactId>jaxws-tools</artifactId> 
		  <type>pom</type>
		</dependency>
	
    </dependencies>
	
$ jar tvf target/SOAPWithJaxWS-0.0.1-SNAPSHOT.war
     0 Tue Feb 19 07:21:30 CET 2019 META-INF/
   134 Tue Feb 19 07:21:28 CET 2019 META-INF/MANIFEST.MF
     0 Tue Feb 19 07:21:28 CET 2019 WEB-INF/
     0 Tue Feb 19 07:21:28 CET 2019 WEB-INF/classes/
     0 Tue Feb 19 07:21:28 CET 2019 WEB-INF/classes/net/
     0 Tue Feb 19 07:21:28 CET 2019 WEB-INF/classes/net/mahtabalam/
     0 Tue Feb 19 07:21:28 CET 2019 WEB-INF/classes/net/mahtabalam/ws/
     0 Tue Feb 19 07:21:30 CET 2019 WEB-INF/lib/
   485 Tue Feb 19 07:21:28 CET 2019 WEB-INF/classes/net/mahtabalam/ws/Country.class
  1483 Tue Feb 19 07:21:28 CET 2019 WEB-INF/classes/net/mahtabalam/ws/CountryImpl.class
  2005 Tue Feb 19 07:21:28 CET 2019 WEB-INF/classes/net/mahtabalam/ws/State.class
  5893 Tue Feb 19 07:21:28 CET 2019 WEB-INF/classes/net/mahtabalam/ws/Utility.class
317195 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/FastInfoset-1.2.16.jar
204972 Thu Jan 31 16:07:02 CET 2019 WEB-INF/lib/gmbal-4.0.0.jar
 36399 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/ha-api-3.1.12.jar
 27156 Thu Jan 31 16:07:00 CET 2019 WEB-INF/lib/istack-commons-runtime-3.0.8.jar
 44399 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/jakarta.activation-api-1.2.1.jar
 25150 Thu Jan 31 14:35:28 CET 2019 WEB-INF/lib/jakarta.annotation-api-1.3.4.jar
 15860 Thu Jan 31 16:07:00 CET 2019 WEB-INF/lib/jakarta.jws-api-1.1.1.jar
115498 Thu Jan 31 16:07:00 CET 2019 WEB-INF/lib/jakarta.xml.bind-api-2.3.2.jar
 36161 Thu Jan 31 16:07:00 CET 2019 WEB-INF/lib/jakarta.xml.soap-api-1.4.1.jar
 57877 Thu Jan 31 16:07:00 CET 2019 WEB-INF/lib/jakarta.xml.ws-api-2.3.2.jar
124380 Sun Feb 10 19:17:32 CET 2019 WEB-INF/lib/jaxb-jxc-2.3.2.jar
1013367 Thu Jan 31 17:09:50 CET 2019 WEB-INF/lib/jaxb-runtime-2.3.2.jar
1898659 Sun Feb 10 19:17:46 CET 2019 WEB-INF/lib/jaxb-xjc-2.3.2.jar
2463818 Sun Feb 10 19:17:42 CET 2019 WEB-INF/lib/jaxws-rt-2.3.2.jar
 45451 Thu Jan 31 16:07:02 CET 2019 WEB-INF/lib/management-api-3.2.1.jar
 67125 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/mimepull-1.9.11.jar
357914 Thu Jan 31 16:07:02 CET 2019 WEB-INF/lib/pfl-asm-4.0.1.jar
197485 Thu Jan 31 16:07:02 CET 2019 WEB-INF/lib/pfl-basic-4.0.1.jar
 70799 Thu Jan 31 16:07:02 CET 2019 WEB-INF/lib/pfl-basic-tools-4.0.1.jar
343539 Thu Jan 31 16:07:02 CET 2019 WEB-INF/lib/pfl-dynamic-4.0.1.jar
 93886 Thu Jan 31 16:07:02 CET 2019 WEB-INF/lib/pfl-tf-4.0.1.jar
 49125 Thu Jan 31 16:07:02 CET 2019 WEB-INF/lib/pfl-tf-tools-4.0.1.jar
181165 Thu Jan 31 16:07:00 CET 2019 WEB-INF/lib/policy-2.7.6.jar
 68177 Tue Oct 10 21:55:08 CEST 2017 WEB-INF/lib/resolver-20050927.jar					/ !
457331 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/saaj-impl-1.5.1.jar
 38099 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/stax-ex-1.8.1.jar
169541 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/stax2-api-4.1.jar
 73918 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/streambuffer-1.5.7.jar
 72080 Thu Jan 31 17:09:50 CET 2019 WEB-INF/lib/txw2-2.3.2.jar
513602 Thu Jan 31 16:07:04 CET 2019 WEB-INF/lib/woodstox-core-5.1.0.jar
   268 Fri Feb 08 09:16:26 CET 2019 WEB-INF/sun-jaxws.xml
   794 Fri Feb 08 09:16:26 CET 2019 WEB-INF/web.xml
     0 Tue Feb 19 07:21:30 CET 2019 META-INF/maven/
     0 Tue Feb 19 07:21:30 CET 2019 META-INF/maven/my.own.ws/
     0 Tue Feb 19 07:21:30 CET 2019 META-INF/maven/my.own.ws/SOAPWithJaxWS/
  1390 Tue Feb 19 07:20:56 CET 2019 META-INF/maven/my.own.ws/SOAPWithJaxWS/pom.xml
   121 Tue Feb 19 07:21:30 CET 2019 META-INF/maven/my.own.ws/SOAPWithJaxWS/pom.properties
	
	
/ 1313	. 
	
/ maar jaxws-tools:2.3.2 heeft resolver niet,
/ als we de dep op resolver apart in de pom erbij geven , komt resolver's jar ook in de war

$ vi pom.xml

   <dependencyManagement>
		<dependencies>	
			<dependency>
			  <groupId>com.sun.xml.ws</groupId>
			  <artifactId>jaxws-tools</artifactId>	
			  <version>2.3.2</version>
			  <type>pom</type>
			</dependency>
			<dependency>
		      <groupId>com.sun.org.apache.xml.internal</groupId>
		      <artifactId>resolver</artifactId>
		      <version>20050927</version>
		    </dependency>
		</dependencies>	    
    </dependencyManagement>
    
    <dependencies>
		<dependency>
		  <groupId>com.sun.xml.ws</groupId>
		  <artifactId>jaxws-tools</artifactId> 
		  <type>pom</type>
		</dependency>
		    <dependency>
		      <groupId>com.sun.org.apache.xml.internal</groupId>
		      <artifactId>resolver</artifactId>
		    </dependency>
	
    </dependencies>

/ <scope>compile</scope> is de default, de dep komt in de war,

/ 1313	. 

/ dit heeft wildfly,

ERVELDEN@LBNL031514 MINGW64 ~/bin/wildfly-10.1.0.Final
$ jar tvf modules/system/layers/base/org/apache/xml-resolver/main/xml-resolver-1.2.jar | grep CatalogManager
 11484 Mon Nov 20 15:22:10 CET 2006 org/apache/xml/resolver/CatalogManager.class
	
/ 1313	. 

/ files in src/main/resources komen in WEB-INF/classes/, 
/ files in src/main/webapp komen in de root, dus files in src/main/webapp/WEB-INF komen in WEB-INF/, 


/ 1313	.

/ de orig dir,

$ find abc-wildfly-helloworld-ws
abc-wildfly-helloworld-ws
abc-wildfly-helloworld-ws/index.html
abc-wildfly-helloworld-ws/META-INF
abc-wildfly-helloworld-ws/WEB-INF
abc-wildfly-helloworld-ws/WEB-INF/beans.xml
abc-wildfly-helloworld-ws/WEB-INF/classes
abc-wildfly-helloworld-ws/WEB-INF/classes/org
abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss
abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss/as
abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss/as/quickstarts
abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld
abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/HelloWorldService.class
abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/HelloWorldServiceImpl.class

/ de originele jar,

$ jar tvf abc-wildfly-helloworld-ws.war.ok
    99 Mon Feb 18 16:04:12 CET 2019 META-INF/MANIFEST.MF
     0 Mon Feb 18 16:04:12 CET 2019 META-INF/
     0 Mon Feb 18 16:04:12 CET 2019 WEB-INF/
     0 Mon Feb 18 16:04:12 CET 2019 WEB-INF/classes/
     0 Mon Feb 18 16:04:12 CET 2019 WEB-INF/classes/org/
     0 Mon Feb 18 16:04:12 CET 2019 WEB-INF/classes/org/jboss/
     0 Mon Feb 18 16:04:12 CET 2019 WEB-INF/classes/org/jboss/as/
     0 Mon Feb 18 16:04:12 CET 2019 WEB-INF/classes/org/jboss/as/quickstarts/
     0 Mon Feb 18 16:04:12 CET 2019 WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/
  1621 Thu Jan 31 22:53:46 CET 2019 index.html
  1300 Thu Jan 31 22:53:46 CET 2019 WEB-INF/beans.xml
   530 Mon Feb 18 16:04:12 CET 2019 WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/HelloWorldService.class
 12295 Sun Feb 10 10:24:38 CET 2019 META-INF/maven/org.wildfly.quickstarts/abc-wildfly-helloworld-ws/pom.xml
  2775 Mon Feb 18 16:04:12 CET 2019 WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/HelloWorldServiceImpl.class
   128 Mon Feb 18 16:04:12 CET 2019 META-INF/maven/org.wildfly.quickstarts/abc-wildfly-helloworld-ws/pom.properties

/ test altijd	,
http://localhost:8080/abc-wildfly-helloworld-ws/HelloWorldServiceX?wsdl=HelloWorldService.wsdl

/ 131313	. 

/ als we uit target/abc-wildfly-helloworld-ws/ een beans.xml rm, en zelf jar cfv, krijgen we een war zonder de pom files, en deze is ook ok,
 
$ pwd
/c/Users/ervelden/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wildfly-helloworld-ws/target/abc-wildfly-helloworld-ws
$ jar cfv ../abc-wildfly-helloworld-ws.war *

$ cd ..
$ jar tvf abc-wildfly-helloworld-ws.war
     0 Tue Feb 19 08:55:46 CET 2019 META-INF/
    69 Tue Feb 19 08:55:46 CET 2019 META-INF/MANIFEST.MF
  1621 Thu Jan 31 22:53:46 CET 2019 index.html
     0 Tue Feb 19 08:30:38 CET 2019 WEB-INF/
     0 Mon Feb 18 16:04:12 CET 2019 WEB-INF/classes/
     0 Mon Feb 18 16:04:12 CET 2019 WEB-INF/classes/org/
     0 Mon Feb 18 16:04:12 CET 2019 WEB-INF/classes/org/jboss/
     0 Mon Feb 18 16:04:12 CET 2019 WEB-INF/classes/org/jboss/as/
     0 Mon Feb 18 16:04:12 CET 2019 WEB-INF/classes/org/jboss/as/quickstarts/
     0 Mon Feb 18 16:04:12 CET 2019 WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/
   530 Mon Feb 18 16:04:12 CET 2019 WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/HelloWorldService.class
  2775 Mon Feb 18 16:04:12 CET 2019 WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/HelloWorldServiceImpl.class

/ test altijd	,
http://localhost:8080/abc-wildfly-helloworld-ws/HelloWorldServiceX?wsdl=HelloWorldService.wsdl

/ 1313	. 

/ we beginnen met de target/abc-wildfly-helloworld-ws/ gemaakt met $ mvn clean package,

$ find abc-wildfly-helloworld-ws
abc-wildfly-helloworld-ws
abc-wildfly-helloworld-ws/index.html
abc-wildfly-helloworld-ws/META-INF
abc-wildfly-helloworld-ws/WEB-INF
abc-wildfly-helloworld-ws/WEB-INF/beans.xml
abc-wildfly-helloworld-ws/WEB-INF/classes
abc-wildfly-helloworld-ws/WEB-INF/classes/org
abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss
abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss/as
abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss/as/quickstarts
abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld
abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/HelloWorldService.class
abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/HelloWorldServiceImpl.class

ERVELDEN@LBNL031514 MINGW64 ~/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wildfly-helloworld-ws/target
$ jar tvf abc-wildfly-helloworld-ws.war
    99 Tue Feb 19 09:37:36 CET 2019 META-INF/MANIFEST.MF
     0 Tue Feb 19 09:37:36 CET 2019 META-INF/
     0 Tue Feb 19 09:37:36 CET 2019 WEB-INF/
     0 Tue Feb 19 09:37:36 CET 2019 WEB-INF/classes/
     0 Tue Feb 19 09:37:36 CET 2019 WEB-INF/classes/org/
     0 Tue Feb 19 09:37:36 CET 2019 WEB-INF/classes/org/jboss/
     0 Tue Feb 19 09:37:36 CET 2019 WEB-INF/classes/org/jboss/as/
     0 Tue Feb 19 09:37:36 CET 2019 WEB-INF/classes/org/jboss/as/quickstarts/
     0 Tue Feb 19 09:37:36 CET 2019 WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/
  1621 Thu Jan 31 22:53:46 CET 2019 index.html
  1300 Thu Jan 31 22:53:46 CET 2019 WEB-INF/beans.xml
   530 Tue Feb 19 09:37:34 CET 2019 WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/HelloWorldService.class
  2775 Tue Feb 19 09:37:34 CET 2019 WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/HelloWorldServiceImpl.class
 12295 Sun Feb 10 10:24:38 CET 2019 META-INF/maven/org.wildfly.quickstarts/abc-wildfly-helloworld-ws/pom.xml
   128 Tue Feb 19 09:37:36 CET 2019 META-INF/maven/org.wildfly.quickstarts/abc-wildfly-helloworld-ws/pom.properties

ERVELDEN@LBNL031514 MINGW64 ~/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wildfly-helloworld-ws/target/abc-wildfly-helloworld-ws
$ rm WEB-INF/beans.xml

ERVELDEN@LBNL031514 MINGW64 ~/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wildfly-helloworld-ws/target/abc-wildfly-helloworld-ws
$ jar cvf ../abc-wildfly-helloworld-ws.war *
added manifest
adding: index.html(in = 1621) (out= 838)(deflated 48%)
ignoring entry META-INF/
adding: WEB-INF/(in = 0) (out= 0)(stored 0%)
adding: WEB-INF/classes/(in = 0) (out= 0)(stored 0%)
adding: WEB-INF/classes/org/(in = 0) (out= 0)(stored 0%)
adding: WEB-INF/classes/org/jboss/(in = 0) (out= 0)(stored 0%)
adding: WEB-INF/classes/org/jboss/as/(in = 0) (out= 0)(stored 0%)
adding: WEB-INF/classes/org/jboss/as/quickstarts/(in = 0) (out= 0)(stored 0%)
adding: WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/(in = 0) (out= 0)(stored 0%)
adding: WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/HelloWorldService.class(in = 530) (out= 284)(deflated 46%)
adding: WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/HelloWorldServiceImpl.class(in = 2775) (out= 1343)(deflated 51%)

/ of,
ERVELDEN@LBNL031514 MINGW64 ~/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wildfly-helloworld-ws/target
$ (cd abc-wildfly-helloworld-ws; jar cfv ../abc-wildfly-helloworld-ws.war *)

/ deploy OK,

/ SAMENVATTING WS IN WILDFLY

/ 13	. 

/ wildfly heeft cxf, 
/ daar werken we mee, we hebben dus geen jaxws deps in de pom,

/ workspace-jbosstools-jee-oxygen-wildfly-quickstart
/ proj abc-wildfly-helloworld-ws
/ dit is wildfly-helloworld-ws, met wat aanpassingen

$ vi HelloWorldServiceImpl.java

@WebService(serviceName = "HelloWorldServiceX", portName = "HelloWorldY", name = "HelloWorldZ", endpointInterface = "org.jboss.as.quickstarts.wshelloworld.HelloWorldService",
    targetNamespace = "http://www.wildfly.org/quickstarts/wshelloworld/HelloWorld")
public class HelloWorldServiceImpl implements HelloWorldService {
	
	@Resource
	WebServiceContext context;

    @Override
    public String sayHello() {
        return "Hello World!";
    }

    @Override
    public String sayHelloToName(final String name) {
    	
    	MessageContext ctx=context.getMessageContext();
    	HttpServletRequest req=(HttpServletRequest)ctx.get(MessageContext.SERVLET_REQUEST);
    	int localPort = req.getLocalPort();

        /* Create a list with just the one value */
        final List<String> names = new ArrayList<>();
        names.add(name);

        return sayHelloToNames(names);
    }

    @Override
    public String sayHelloToNames(final List<String> names) {
        return "Hello " + createNameListString(names);
    }

/ HIER HIER HIER

$ vi pom.xml

    <dependencies>

        <!-- Import the Servlet API, we use provided scope as the API is
            included in WildFly -->
         
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
      
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>



[standalone@localhost:9990 /] undeploy abc-wildfly-helloworld-ws.war
[standalone@localhost:9990 /] deploy C:\Users\ervelden\eclipse\workspace-jbosstools-jee-oxygen-wildfly-quickstart\abc-wildfly-helloworld-ws\target\abc-wildfly-helloworld-ws.war

/ geef in de browser,
http://localhost:8080/abc-wildfly-helloworld-ws/HelloWorldServiceX?wsdl=HelloWorldService.wsdl
/ of doe,
C:\Users\ervelden>curl http://localhost:8080/abc-wildfly-helloworld-ws/HelloWorldServiceX?wsdl=HelloWorldService.wsdl

/ Einde SAMENVATTING WS IN WILDFLY



/ 131313	. 

$ pom.xml

/ we hebben eig. helemaal geen deps nodig, 

/ in de pom file staat dep op 
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
/ deze is nodig voor HttpServletRequest, die we zelf hebben add, omdat we @Resource wilden bestuderen	, 
/ maar als we de HttpServletRequest regel out comment, dan hebben we deze dep niet nodig,


$ HelloWorldService.java

@WebService(serviceName = "HelloWorldServiceX", portName = "HelloWorldY", name = "HelloWorldZ", endpointInterface = "org.jboss.as.quickstarts.wshelloworld.HelloWorldService",
    targetNamespace = "http://www.wildfly.org/quickstarts/wshelloworld/HelloWorld")
public class HelloWorldServiceImpl implements HelloWorldService {
	
	@Resource
	WebServiceContext context;

    @Override
    public String sayHello() {
        return "Hello World!";
    }

    @Override
    public String sayHelloToName(final String name) {
    	
    	MessageContext ctx=context.getMessageContext();
//    	HttpServletRequest req=(HttpServletRequest)ctx.get(MessageContext.SERVLET_REQUEST);
//    	int localPort = req.getLocalPort();

/ als we -Dmaven.test.skip=true , dan hebben we de test deps ook niet nodig, 

/ dus we hebben een pom zonder deps, en dit deploys OK,

/ 1313	. 

/ vergl abc-wildfly-helloworld-ws en abc-wsgen-wsimp/discoverIndia

/ in abc-wildfly-helloworld-ws,
ERVELDEN@LBNL031514 MINGW64 ~/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wildfly-helloworld-ws
  652  mvn clean package -Dmaven.test.skip=true
  655  rm target/abc-wildfly-helloworld-ws/index.html
  656  rm target/abc-wildfly-helloworld-ws/WEB-INF/beans.xml
  657  (cd target/abc-wildfly-helloworld-ws;find)
  658  (cd target/abc-wildfly-helloworld-ws;jar cfv ../abc-wildfly-helloworld-ws.war *)
/ deploys,

ERVELDEN@LBNL031514 MINGW64 ~/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my (master)
$ mvn clean package
  514  rm target/SOAPWithJaxWS-0.0.1-SNAPSHOT/WEB-INF/sun-jaxws.xml
  515  rm target/SOAPWithJaxWS-0.0.1-SNAPSHOT/WEB-INF/web.xml
  516  (cd target/SOAPWithJaxWS-0.0.1-SNAPSHOT;jar cvf ../SOAPWithJaxWS-0.0.1-SNAPSHOT.war  *)

/ 1313	.

ERVELDEN@LBNL031514 MINGW64 ~/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my (master)
 
/ we veranderen de artifactId in abc-wsgen-wsimport, en de version in 0.0.1	,
/ daardoor ontstaat er 
$ ls target
abc-wsgen-wsimport-0.0.1/     abc-wsgen-wsimport-0.0.1.war  ...
/ geef,
http://localhost:8080/abc-wsgen-wsimport-0.0.1/discoverIndia?wsdl

/ 1313	. 

ERVELDEN@LBNL031514 MINGW64 ~/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my-annot (master)

/ we hebben annot op CountryImpl set, en we rm web.xml en sun-jaxws.xml,

$ vi CountryImpl.java

@WebService (serviceName="CountryImplX",portName="CountryY",name="CountryZ",
	endpointInterface="net.mahtabalam.ws.Country",targetNamespace="http://www.wildfly.org/net/mahtabalam/ws/Country")

  538  mvn clean package
  539  rm target/abc-wsgen-wsimport-0.0.1/WEB-INF/sun-jaxws.xml
  540  rm target/abc-wsgen-wsimport-0.0.1/WEB-INF/web.xml
  541  (cd target/abc-wsgen-wsimport-0.0.1;jar cvf ../abc-wsgen-wsimport-0.0.1.war  *)

/ deploy OK,
/ geef,
http://localhost:8080/abc-wsgen-wsimport-0.0.1/CountryImplX?wsdl
/ OK,

/ dit klopt ook wel, want web.xml staan com.sun.xml.ws classes.,
/ als we zelf de jaxws impl meegeven, dan hebben we web.xml nodig, 
/ als we de cxf uit wildfly nemen, hebben we helemaal geen deps, en krijgen we juist een fout als we web.xml hebben: WSServlet not found, klopt,

/ we rename discoverIndia-soap-web-service-my-annot naar discoverIndia-soap-web-service-my-annot-cxf	,
	

/ 1313	. 

/ we maken proj discoverIndia-soap-web-service-my-annot-jaxws

/ kunnen we web.xml vervangen met annotaties, dus dan moeten we in pom.xml zelf jaxws opnemen,

/ als we een fout zien bij deployment, doe dan bijv wsgen,

ERVELDEN@LBNL031514 MINGW64 ~/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my-annot-jaxws (master)

$ mvn compile
$ wsgen -cp target/classes -keep -wsdl  net.mahtabalam.ws.CountryImpl -d target/gen

/ we moesten CountryImpl aanpassen,	
$ vi CountryImpl.java

@WebService(serviceName="country",portName="country_p",
	endpointInterface="net.mahtabalam.ws.Country",targetNamespace="http://foo")
public class CountryImpl implements Country {

/ de class moet public zijn, 
/ en hij mag geen name param hebben, als er endpointInterface is,
/ TODO

$ mvn clean/package
/ geef 
http://localhost:8080/abc-wsgen-wsimport-0.0.1/country?wsdl






/ lees,
https://stackoverflow.com/questions/15798351/jax-ws-implementation-included-with-java
 


/ 1313	. 







/ Einde FINAL JAX-WS TOMCAT



/ 131313	. 

/ google
is @WebService a cdi annotation
/ lees,
https://blogs.oracle.com/arungupta/totd-124:-using-cdi-jpa-with-jax-rs-and-jax-ws


/ 131313	. 

/ google,
@WebService cdi
/ lees,
http://tomee.apache.org/examples-trunk/simple-webservice/
https://stackoverflow.com/questions/9848549/java-ee-6-webservice-and-cdi-injection
https://developer.jboss.org/thread/179870
https://stackoverflow.com/questions/15138321/using-cdi-in-a-singleton-pattern
https://blogs.oracle.com/theaquarium/default-cdi-enablement-in-java-ee-7
https://stackoverflow.com/questions/2789927/injecting-logger-weld
http://www.sws.bfh.ch/~fischli/courses/info/javaee/doc/JavaEE7AnnotationsCheatSheet.pdf
https://dzone.com/refcardz/contexts-and-depencency
https://access.redhat.com/documentation/en-us/jboss_enterprise_application_platform/6/html/development_guide/sect-jax-ws_web_service_endpoints


/ 131313	. 

/ google,
tomcat add jar to sub directory of lib
/ lees,
https://stackoverflow.com/questions/1675255/how-to-manage-tomcat-6-libraries-into-subfolders-under-tomcat-home-lib

$ less conf/catalina.properties

#
# List of comma-separated paths defining the contents of the "server"
# classloader. Prefixes should be used to define what is the repository type.
# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.
# If left as blank, the "common" loader will be used as Catalina's "server"				/ TODO
# loader.
# Examples:
#     "foo": Add this folder as a class repository
#     "foo/*.jar": Add all the JARs of the specified folder as class
#                  repositories
#     "foo/bar.jar": Add bar.jar as a class repository
server.loader=

#
# List of comma-separated paths defining the contents of the "shared"
# classloader. Prefixes should be used to define what is the repository type.
# Path may be relative to the CATALINA_BASE path or absolute. If left as blank,
# the "common" loader will be used as Catalina's "shared" loader.				/ TODO
# Examples:
#     "foo": Add this folder as a class repository
#     "foo/*.jar": Add all the JARs of the specified folder as class
#                  repositories
#     "foo/bar.jar": Add bar.jar as a class repository
# Please note that for single jars, e.g. bar.jar, you need the URL form
# starting with file:.
shared.loader

/ 13131313	. 

/ we gaan het doen,

/ shared.loader is voor classes die verschillende appl use,
/ catalina.home is de vaste catalina, 


$ vi conf/catalina.properties
shared.loader=lib/ws/*.jar

ERVELDEN@LBNL031514 MINGW64 ~/bin/apache-tomcat-7.0.82
$ mkdir lib/ws

ERVELDEN@LBNL031514 MINGW64 ~/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wsgen-wsimport/discoverIndia-soap-web-service-my (master)
$ cp target/SOAPWithJaxWS-0.0.1-SNAPSHOT/WEB-INF/lib/* ~/bin/apache-tomcat-7.0.82/lib/ws

ERVELDEN@LBNL031514 MINGW64 ~/bin/apache-tomcat-7.0.82
$ ls lib/ws
FastInfoset-1.2.13.jar            jaxws-api-2.3.0.jar
Fastinfoset-1.2.16.jar            jaxws-rt-2.3.0.jar
gmbal-api-only-3.2.0-b003.jar     jaxws-tools-2.3.0.jar
ha-api-3.1.12.jar                 jsr181-api-1.0-MR1.jar
istack-commons-runtime-3.0.8.jar  management-api-3.2.1.jar
jakarta.activation-api-1.2.1.jar  mimepull-1.9.11.jar
jakarta.xml.bind-api-2.3.2.jar    policy-2.7.6.jar
jakarta.xml.soap-api-1.4.1.jar    resolver-20050927.jar
javax.activation-api-1.2.0.jar    saaj-impl-1.5.1.jar
javax.annotation-api-1.3.2.jar    stax2-api-4.1.jar
javax.xml.soap-api-1.4.0.jar      stax-api-1.0-2.jar
jaxb-api-2.3.1.jar                stax-ex-1.8.1.jar
jaxb-core-2.3.0.jar               streambuffer-1.5.7.jar
jaxb-impl-2.3.0.jar               txw2-2.3.2.jar
jaxb-jxc-2.3.0.jar                woodstox-core-5.1.0.jar
jaxb-xjc-2.3.0.jar                woodstox-core-asl-4.4.1.jar

/ we zien dubbelen	,

/ 13131313	. 

/ we zien in eclipse, dat als we jaxws-rt opnemen, we 




/ 131313	. 

/ meerdere tomcats draaien,

/ google,
catalina.home vs catalina.base
/ lees,
https://stackoverflow.com/questions/3090398/tomcat-catalina-base-and-catalina-home-variables
/ lees RUNNING.txt in catalina.home,

/ lees,
https://www.rasia.io/blog/how-to-easily-setup-lucee-in-tomcat.html
/ over makebase.bat,

/ 131313	. 

/ google,
tomcat shared loader server loader
/ lees,
https://stackoverflow.com/questions/49837860/tomcat-8-common-loader-server-loader-shared-loader

(Probably precisely because of this confusion) they're no longer used by default. The server classpath used to contain classes that were only available to the server, but not to any web application. I hope to get it right: The common loader contains classes available to every web application and the server, while the shared loader contained classes available to all web applications, but not the server.

Here be dragons - don't go there. Memory is cheap - don't use those constructs to "place some jars more optimally". The default (other than for JDBC drivers if you use JNDI resources) should be: Jars are in your web application.

They're no longer used for a reason. And the reason is understandability and maintainability of your installation. There are a lot of unexpected side effects with code that's shared between applications.







/ 131313	. 

/ ga naar, 	
https://javaee.github.io/metro-jax-ws/
/ click Downloads, unzip, 
D:\Users\ERVELDEN\Downloads\jaxws-ri-2.3.1.zip\jaxws-ri\lib\
/ hier zien we de hele lijst, van jars die we hierboven ook zien,
/ klik Sources	,
https://github.com/javaee/metro-jax-ws
/ ga in jaxws-ri/
https://github.com/javaee/metro-jax-ws/tree/master/jaxws-ri
/ we zien pom.xml, die parents heeft	, 
https://github.com/javaee/metro-jax-ws/blob/master/jaxws-ri/pom.xml

/ maar we kunnen ook in onze local repo kijken	, 
/ we hebben deze pom niet local, maar wel zijn parents,

$ less ~/.m2/repository/com/sun/xml//ws/jaxws-ri-bom-ext/2.3.2/jaxws-ri-bom-ext-2.3.2.pom
$ less ~/.m2/repository/com/sun/xml//ws/jaxws-ri-bom/2.3.2/jaxws-ri-bom-2.3.2.pom
/ deze heeft al de dependencies,
    <properties>
        <!--************************************************************-->

        <istack.version>3.0.8</istack.version>
        <gmbal-api.version>4.0.0</gmbal-api.version>
        <pfl-tf.version>4.0.1</pfl-tf.version>
        <ha-api.version>3.1.12</ha-api.version>
        <jaxb.version>2.3.2</jaxb.version>
        <jaxws-api.version>2.3.2</jaxws-api.version>
        <javax.jws-api.version>1.1.1</javax.jws-api.version>
        <management-api.version>3.2.1</management-api.version>
        <mimepull.version>1.9.11</mimepull.version>
        <policy.version>2.7.6</policy.version>
        <resolver.version>20050927</resolver.version>
        <saaj-api.version>1.4.1</saaj-api.version>
        <saaj-impl.version>1.5.1</saaj-impl.version>
        <streambuffer.version>1.5.7</streambuffer.version>
        <woodstox-core.version>5.1.0</woodstox-core.version>
        <stax2-api.version>4.1</stax2-api.version>
        <javax.annotation-api.version>1.3.4</javax.annotation-api.version>
        <javax.activation.version>1.2.1</javax.activation.version>
    </properties>

   <dependencyManagement>
        <dependencies>

            <!-- Parsers -->
            <dependency>
                <groupId>com.fasterxml.woodstox</groupId>
                <artifactId>woodstox-core</artifactId>
                <version>${woodstox-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.woodstox</groupId>
                <artifactId>stax2-api</artifactId>
                <version>${stax2-api.version}</version>
            </dependency>


            <!-- Source artifacts -->
            <dependency>
                <groupId>com.sun.xml.stream.buffer</groupId>
                <artifactId>streambuffer</artifactId>
                <version>${streambuffer.version}</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>org.jvnet.mimepull</groupId>
                <artifactId>mimepull</artifactId>
                <version>${mimepull.version}</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>jakarta.xml.soap</groupId>
                <artifactId>jakarta.xml.soap-api</artifactId>
                <version>${saaj-api.version}</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.messaging.saaj</groupId>
                <artifactId>saaj-impl</artifactId>
                <version>${saaj-impl.version}</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>jakarta.xml.ws</groupId>
                <artifactId>jakarta.xml.ws-api</artifactId>
                <version>${jaxws-api.version}</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>policy</artifactId>
                <version>${policy.version}</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>org.glassfish.gmbal</groupId>
                <artifactId>gmbal</artifactId>
                <version>${gmbal-api.version}</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>org.glassfish.external</groupId>
                <artifactId>management-api</artifactId>
                <version>${management-api.version}</version>
                <classifier>sources</classifier>
            </dependency>

            <!-- Binary-->
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-bom</artifactId>
                <version>${jaxb.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>javax.jws</groupId>
                <artifactId>javax.jws-api</artifactId>
                <version>${javax.jws-api.version}</version>
                <classifier>sources</classifier>
            </dependency>

            <dependency>
                <groupId>com.sun.xml.stream.buffer</groupId>
                <artifactId>streambuffer</artifactId>
                <version>${streambuffer.version}</version>
                <exclusions>
                    <!-- part of JDK 6+ -->
                    <exclusion>
                        <artifactId>stax-api</artifactId>
                        <groupId>javax.xml.stream</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jvnet.mimepull</groupId>
                <artifactId>mimepull</artifactId>
                <version>${mimepull.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>policy</artifactId>
                <version>${policy.version}</version>
                <exclusions>
                    <!-- using direct (possibly optional) dependencies -->
                    <exclusion>
                        <artifactId>*</artifactId>
                        <groupId>*</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>jakarta.xml.soap</groupId>
                <artifactId>jakarta.xml.soap-api</artifactId>
                <version>${saaj-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.messaging.saaj</groupId>
                <artifactId>saaj-impl</artifactId>
                <version>${saaj-impl.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.jws</groupId>
                <artifactId>jakarta.jws-api</artifactId>
                <version>${javax.jws-api.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.xml.ws</groupId>
                <artifactId>jakarta.xml.ws-api</artifactId>
                <version>${jaxws-api.version}</version>
            </dependency>

            <dependency>
                <groupId>com.sun.org.apache.xml.internal</groupId>
                <artifactId>resolver</artifactId>
                <scope>provided</scope>
                <version>${resolver.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.annotation</groupId>
                <artifactId>jakarta.annotation-api</artifactId>
                <version>${javax.annotation-api.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.annotation</groupId>
                <artifactId>jakarta.annotation-api</artifactId>
                <version>${javax.annotation-api.version}</version>
                <classifier>sources</classifier>
            </dependency>

            <!-- To be removed (make optional) in the future -->
            <dependency>
                <groupId>org.glassfish.ha</groupId>
                <artifactId>ha-api</artifactId>
                <version>${ha-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.gmbal</groupId>
                <artifactId>gmbal</artifactId>
                <version>${gmbal-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.external</groupId>
                <artifactId>management-api</artifactId>
                <version>${management-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.pfl</groupId>
                <artifactId>pfl-tf</artifactId>
                <version>${pfl-tf.version}</version>
            </dependency>

            <!-- Distribution Artifacts -->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>jaxws-rt</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>jaxws-tools</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>jaxws-eclipselink-plugin</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>sdo-eclipselink-plugin</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>jaxws-ri</artifactId>
                <version>${project.version}</version>
                <type>zip</type>
            </dependency>

            <!-- Does it really belong here? -->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>jaxws-maven-plugin</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.activation</groupId>
                <artifactId>jakarta.activation-api</artifactId>
                <version>${javax.activation.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.activation</groupId>
                <artifactId>jakarta.activation</artifactId>
                <version>${javax.activation.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

















/ 131313	. 

/ lees,
https://tomcat.apache.org/tomcat-7.0-doc/manager-howto.html


/ 131313	. 

http://javainsimpleway.com/jax-ws-overview/
http://javainsimpleway.com/understanding-jax-ws-wsgen-with-example/		/ op command line !
http://www.mkyong.com/webservices/jax-ws/jax-ws-wsgen-tool-example/
http://java.boot.by/ocewsd6-guide/ch06.html
http://www.mkyong.com/webservices/jax-ws/how-to-trace-soap-message-in-eclipse-ide/
https://coderanch.com/t/498104/java/Web-Service-Multiple-Endpoints		/ multiple ports in service 
https://stackoverflow.com/questions/15881256/multiple-port-service-defined-in-a-wsdl / multiple ports
https://stackoverflow.com/questions/11561/what-is-the-difference-between-an-endpoint-a-service-and-a-port-when-working-w / uitleg service, ports, ...
https://docs.jboss.org/author/display/WFLY10/Apache+CXF+integration
https://www.baeldung.com/jax-ws
http://www.adam-bien.com/roller/abien/entry/the_only_one_dependency_you 	/ javax:javaee-api:7.0
https://issues.jboss.org/browse/JBWS-4120
http://www.mastertheboss.com/javaee/jboss-web-services/how-to-debug-web-services
http://localhost:8080/abc-wildfly-helloworld-ws/HelloWorldServiceX?wsdl=HelloWorldService.wsdl
http://localhost:9990/console/App.html#standalone-deployments
https://github.com/wildfly/quickstart/tree/11.x
https://search.maven.org/artifact/com.sun.xml.ws/jaxws-rt/2.3.0/pom
https://javaee.github.io/metro/doc/getting-started/getting-started.html
https://stackoverflow.com/questions/574594/how-can-i-create-an-executable-jar-with-dependencies-using-maven  / !
http://localhost:8888/ws/primenumber?wsdl

/ 131313	. 

/ lees,
https://www.w3.org/TR/wsdl/#Endpoint

/ ze hebben het over endpoints ipv. ports	,
/ TODO

/ 7	. 

/ workspace-jbosstools-jee-oxygen-wildfly-quickstart
/ abc-wildfly-helloworld-ws

$ vi HelloWorldServiceImpl.java

@WebService(serviceName = "HelloWorldServiceX", portName = "HelloWorldY", name = "HelloWorldZ", 
	endpointInterface = "org.jboss.as.quickstarts.wshelloworld.HelloWorldService",
	targetNamespace = "http://www.wildfly.org/quickstarts/wshelloworld/HelloWorld")
public class HelloWorldServiceImpl implements HelloWorldService {
	
	@Resource
	WebServiceContext context;

    @Override
    public String sayHello() {
        return "Hello World!";
    }

    @Override
    public String sayHelloToName(final String name) {
    	
    	MessageContext ctx=context.getMessageContext();
    	HttpServletRequest req=(HttpServletRequest)ctx.get(MessageContext.SERVLET_REQUEST);
    	int localPort = req.getLocalPort();


/ @javax.ws.WebService is uit de jdk, dus die kun je altijd gebruiken	,
/ @javax.annotation.Resource net zo,
/ dus hoeven we in de pom geen dep 	,

/ maar voor javax.servlet.http.HttpServletRequest hebben we nodig,

$ vi pom.xml
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
		
/ maar @javax.enterprise.context.SessionScoped hebben we nodig,

$ vi pom.xml

   		<dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
		
/ maar voor @Stateless hebben we nodig,

$ vi pom.xml

		<!-- zelf -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

/ 13	. 


/ als we doen,
@WebService(serviceName = "HelloWorldServiceX", portName = "HelloWorldY", name = "HelloWorldZ", endpointInterface = "org.jboss.as.quickstarts.wshelloworld.HelloWorldService",
    targetNamespace = "http://www.wildfly.org/quickstarts/wshelloworld/HelloWorld")
@SessionScoped
@Stateless
public class HelloWorldServiceImpl implements HelloWorldService {

/ dan ERR,
Session bean specifies an illegal scope. A stateless session bean must belong to the @Dependent pseudo-scope [JSR-346 §3.2]

/ @WebService kan met @SessionScoped en @Stateless, 
/ WH is @SessionScoped de goede met @WebService,
/ Waarom werkt @WebService zonder een scope?
/ TODO

/ 13	. 

/ in quickstart's wildfly-helloworld-ws, en dus ook in abc-wildfly-helloworld-ws is er 
$ vi src/main/webapp/WEB-INF/beans.xml
<beans xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd" 
	bean-discovery-mode="all">
</beans>

/ na $ mvn clean package,
ERVELDEN@LBNL031514 MINGW64 ~/eclipse/workspace-jbosstools-jee-oxygen-wildfly-quickstart/abc-wildfly-helloworld-ws
$ find target/abc-wildfly-helloworld-ws
target/abc-wildfly-helloworld-ws
target/abc-wildfly-helloworld-ws/index.html
target/abc-wildfly-helloworld-ws/META-INF
target/abc-wildfly-helloworld-ws/WEB-INF
target/abc-wildfly-helloworld-ws/WEB-INF/beans.xml
target/abc-wildfly-helloworld-ws/WEB-INF/classes
target/abc-wildfly-helloworld-ws/WEB-INF/classes/org
target/abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss
target/abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss/as
target/abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss/as/quickstarts
target/abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld
target/abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/HelloWorldService.class
target/abc-wildfly-helloworld-ws/WEB-INF/classes/org/jboss/as/quickstarts/wshelloworld/HelloWorldServiceImpl.class

$ vi beans.xml

<beans xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd" 
    bean-discovery-mode="annotated">
</beans>

/ lees,
https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html/development_guide/contexts_and_dependency_injection_cdi
/ TODO @Singleton en pseudo scope

/ 13	. 

https://stackoverflow.com/questions/15881256/multiple-port-service-defined-in-a-wsdl
https://stackoverflow.com/questions/11561/what-is-the-difference-between-an-endpoint-a-service-and-a-port-when-working-w
https://stackoverflow.com/questions/18310388/meaning-of-bean-discovery-mode-annotated-in-cdi-1-1

https://javaee.github.io/tutorial/toc.html
https://javaee.github.io/tutorial/ejb-basicexamples004.html
https://javaee.github.io/tutorial/jaxws002.html#BNAYX
https://javaee.github.io/tutorial/usingexamples.html#GFIUD:  https://github.com/javaee/glassfish-samples/tree/master/ws/javaee8
https://docs.oracle.com/javaee/6/tutorial/doc/gexaj.html
https://github.com/javaee/tutorial-examples

/ 13	. 

/ WH tut-install/examples
https://javaee.github.io/tutorial/usingexamples007.html

https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html/development_guide/contexts_and_dependency_injection_cdi

/ docs over cdi in wildfly,
http://docs.wildfly.org/14/Developer_Guide.html#suppressing-implicit-bean-archives
/ lees 7.3 ->
https://docs.jboss.org/weld/reference/2.3.0.Final/en-US/html/devmode.html

/ in abc-wildfly-helloworld-ws,

$ vi WEB-INF/web.xml

<web-app version="3.1" xmlns="http://xmlns.jcp.org/xml/ns/javaee/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">

    <context-param>

        <param-name>org.jboss.weld.development</param-name>

        <param-value>true</param-value>

    </context-param>

</web-app>

/ geef in chrome,
http://localhost:8080/abc-wildfly-helloworld-ws/weld-probe
/ Kies beans,
/ we zien dat als we @WebService , dan is de bean @Dependent, dus wordt gevonden	,
/ als we @WebService @ApplicationScoped	, dan is de bean @ApplicationScoped
/ als we @WebService @javax.ejb.Singleton, dan is de bean @Dependent, 
/ TODO
 
/ lees,
https://abhirockzz.wordpress.com/2014/08/09/ejb-3-x-lifecycle-and-concurrency-models-part-1/
https://dzone.com/articles/ejb-3x-lifecycle-and-0

http://weld.cdi-spec.org/news/2014/04/15/weld-220-final/
/ TODO partial support for implicit bean archives

/ 13	. 
/ lees,
https://books.google.nl/books?id=_nc5DwAAQBAJ&pg=PA55&lpg=PA55&dq=wildfly+no+bean+defining+annotations+will+be+@dependent&source=bl&ots=n1Fdl6bl47&sig=ACfU3U1kwoWdmgrYMkktrGP2zMu2EQvvjw&hl=en&sa=X&ved=2ahUKEwj6xujG1-vgAhWNKlAKHZ_nBEcQ6AEwBXoECAQQAQ#v=onepage&q=wildfly%20no%20bean%20defining%20annotations%20will%20be%20%40dependent&f=false

https://www.oracle.com/technetwork/articles/java/cdi-javaee-bien-225152.html

/ EJB ANNOTATIES

/ een @javax.ejb.Singleton moet als scope een @javax.enterprise.context.Dependent of een @javax.enterprise.context.ApplicationScoped
/ dus @javax.enterprise.context.SessionScoped, @javax.enterprise.context.RequestScoped, @javax.injext.Singleton kan niet,

/ een @javax.ejb.Stateful kan een @javax.inject.Singleton zijn, deze zien we als @javax.inject.Singleton in weld-probe,

/ een @javax.ejb.Stateless kan alleen @Dependent zijn,

/ maak MyService een @javax.inject.Singleton, dan zien we 	,
      service jboss.deployment.unit."abc-wildfly-helloworld-ws.war".component."org.jboss.weld.servlet.WeldTerminalListener".START (missing) dependents: [service jboss.deployment.unit."abc-wildfly-helloworld-ws.war".deploymentCompleteService, service jboss.undertow.deployment.default-server.default-host./abc-wildfly-helloworld-ws.UndertowDeploymentInfoService, service jboss.undertow.deployment.default-server.default-host./abc-wildfly-helloworld-ws]

/ 13	. 

/ branch 10.x,

$ vi abc-wildfly-helloworld-ws.pom

	<properties>
		<version.jboss.bom>10.1.0.Final</version.jboss.bom>

			<dependency>
				<groupId>org.wildfly.bom</groupId>
				<artifactId>wildfly-javaee7-with-tools</artifactId>
				<version>${version.jboss.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Import the CDI API, we use provided scope as the API is included in 
			WildFly -->

		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>
<!-- als je in eclipse hier overheen hover, zien we:
The managed version is 1.2 The artifact is managed in org.jboss.spec:jboss-javaee-7.0:1.0.3.Final
jump to location

		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>
<!-- als je in eclipse hier overheen hover, zien we:
The managed version is 1.2 The artifact is managed in org.jboss.spec:jboss-javaee-7.0:1.0.3.Final
jump to location

		<!-- zelf -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>
<!-- als je in eclipse hier overheen hover, zien we:
The managed version is 1.2 The artifact is managed in org.jboss.spec:jboss-javaee-7.0:1.0.3.Final
jump to location

		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
<!-- als je in eclipse hier overheen hover, zien we:
The managed version is 1.1.11.Final The artifact is managed in org.jboss.arquillian:arquillian-bom:1.1.11.Final
jump to location

/ we kijken in local repo,

ERVELDEN@LBNL031514 MINGW64 ~/.m2/repository
$ less org/wildfly/bom/wildfly-javaee7-with-tools/10.1.0.Final/wildfly-javaee7-with-tools-10.1.0.Final.pom

<project ...>

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>wildfly-javaee7</artifactId>
        <groupId>org.wildfly.bom</groupId>
        <version>10.1.0.Final</version>
    </parent>

    <artifactId>wildfly-javaee7-with-tools</artifactId>
    <version>10.1.0.Final</version>
    <packaging>pom</packaging>
	
	
ERVELDEN@LBNL031514 MINGW64 ~/.m2/repository
$ less org/wildfly/bom/wildfly-javaee7/10.1.0.Final/wildfly-javaee7-10.1.0.Final.pom

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>jboss-parent</artifactId>
        <groupId>org.jboss</groupId>
        <version>21</version>
    </parent>

    <groupId>org.wildfly.bom</groupId>
    <artifactId>wildfly-javaee7</artifactId>
    <version>10.1.0.Final</version>

    <packaging>pom</packaging>
	
	<properties>
	        <version.org.jboss.spec.jboss.javaee.7>1.0.3.Final</version.org.jboss.spec.jboss.javaee.7>

	
	<dependencyManagement>
		<dependencies>
	
	            <!-- BOM imports -->
            <!-- JBoss distributes a complete set of Java EE 7 APIs including
                a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
                a collection) of artifacts. We use this here so that we always get the correct
                versions of artifacts. Here we use the jboss-javaee-7.0 stack (you can read
                this as the JBoss stack of the Java EE full Profile 7 APIs). You can actually use
                this stack with any version of WildFly that implements Java EE 7! -->
            <dependency>
                <groupId>org.jboss.spec</groupId>
                <artifactId>jboss-javaee-7.0</artifactId>
                <version>${version.org.jboss.spec.jboss.javaee.7}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
			
ERVELDEN@LBNL031514 MINGW64 ~/.m2/repository
$ less org/jboss/jboss-parent/21/jboss-parent-21.pom

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 htt
p://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.jboss</groupId>
  <version>21</version>
  <artifactId>jboss-parent</artifactId>

  <packaging>pom</packaging>
  
ERVELDEN@LBNL031514 MINGW64 ~/.m2/repository
$ less org/jboss/spec/jboss-javaee-7.0/1.0.3.Final/jboss-javaee-7.0-1.0.3.Final.pom

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jboss</groupId>
    <artifactId>jboss-parent</artifactId>
    <version>16</version>
  </parent>

  <groupId>org.jboss.spec</groupId>
  <artifactId>jboss-javaee-7.0</artifactId>
  <version>1.0.3.Final</version>
  <packaging>pom</packaging>

  <modules>
    <module>jboss-javaee-web</module>
    <module>jboss-javaee-all</module>
  </modules>

  <properties>
    <version.javax.enterprise>1.2</version.javax.enterprise>
    <version.org.jboss.spec.javax.faces>2.2.11</version.org.jboss.spec.javax.faces>
	...
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>javax.enterprise</groupId>
        <artifactId>cdi-api</artifactId>
        <version>${version.javax.enterprise}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.annotation</groupId>
            <artifactId>jsr250-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
           </exclusion>
          <exclusion>
            <groupId>javax.interceptor</groupId>
            <artifactId>javax.interceptor-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
	
/13	. 

/ modules, classloaders	,

ERVELDEN@LBNL031514 MINGW64 ~/bin/wildfly-10.1.0.Final
$ jar tvf modules/system/layers/base/javax/ejb/api/main/jboss-ejb-api_3.2_spec-1.0.0.Final.jar

/ TODO


/ 13	. 

https://javaee.github.io/glassfish/download
GlassFish 5.0 - Full Platform
/ downloaded, 
downloads for Java EE 8
->
https://javaee.github.io/glassfish/downloads/ri/README
Java Platform Enterprise Edition 8 RI 
/ downloaded	, 105MB
/ 13	. 

/ lees,
https://github.com/arquillian/arquillian-core















 













